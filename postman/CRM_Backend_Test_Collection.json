{
	"info": {
		"_postman_id": "dfe09354-c358-44c1-b96d-19e42a29933d",
		"name": "CRM_Backend_Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "LOGIN",
			"item": [
				{
					"name": "Log_01_Happy_Path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.globals.get(\"email1\");\r",
									"pm.globals.get(\"password1\");\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.globals.set(\"Global_Token1\", jsonData.accessToken);\r",
									"pm.globals.set(\"accountid1\", jsonData.user.AccountId);\r",
									"pm.globals.set(\"ufname1\", jsonData.user.firstname);\r",
									"pm.globals.set(\"ulname1\", jsonData.user.lastname);\r",
									"pm.globals.set(\"uemail1\", jsonData.user.email);\r",
									"pm.globals.set(\"owner1\", jsonData.user.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email1}}\",\r\n    \"password\":\"Haaaashini@\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log_02_Happy_Path",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.globals.get(\"email2\");\r",
									"pm.globals.get(\"password2\");\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.globals.set(\"Global_Token2\", jsonData.accessToken);\r",
									"pm.globals.set(\"accountid2\", jsonData.user.AccountId);\r",
									"pm.globals.set(\"ufname2\", jsonData.user.firstname);\r",
									"pm.globals.set(\"ulname2\", jsonData.user.lastname);\r",
									"pm.globals.set(\"uemail2\", jsonData.user.email);\r",
									"pm.globals.set(\"owner2\", jsonData.user.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email2}}\",\r\n    \"password\":\"{{password1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RESET_PASSWORD",
			"item": [
				{
					"name": "Change_Password",
					"item": [
						{
							"name": "Change_Password_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Password successfully updated. Please login\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{email1}}\",\"oldpassword\":\"{{password1}}\",\"newpassword\":\"{{newpassword}}\",\"passwordConfirm\":\"{{newpassword}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change_Password_02_Password_Reversion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Password successfully updated. Please login\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{email1}}\",\"oldpassword\":\"{{newpassword}}\",\"newpassword\":\"{{password1}}\",\"passwordConfirm\":\"{{password1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change_Password_03_Invalid_Old_Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid Old Password\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{email1}}\",\"oldpassword\":\"1111\",\"newpassword\":\"{{newpassword}}\",\"passwordConfirm\":\"{{newpassword}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change_Password_04_Different_New_Confirm_Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Passwords do not match\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{email1}}\",\"oldpassword\":\"{{password1}}\",\"newpassword\":\"{{newpassword}}\",\"passwordConfirm\":\"{{password1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change_Password_05_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Please fill in all fields\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"\",\"oldpassword\":\"\",\"newpassword\":\"\",\"passwordConfirm\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change_Password_06_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123456",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{email1}}\",\"oldpassword\":\"{{password1}}\",\"newpassword\":\"{{newpassword}}\",\"passwordConfirm\":\"{{newpassword}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change_Password_07_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{email2}}\",\"oldpassword\":\"{{password2}}\",\"newpassword\":\"{{newpassword}}\",\"passwordConfirm\":\"{{newpassword}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change_Password_08_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No user exists with that email\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"{{invalid taskid}}\",\"oldpassword\":\"{{password2}}\",\"newpassword\":\"{{newpassword}}\",\"passwordConfirm\":\"{{newpassword}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"changepassword"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "REGISTER",
			"item": [
				{
					"name": "Register",
					"item": [
						{
							"name": "Register_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"registerfname\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.firstName).to.include(fname);\r",
											"});\r",
											"\r",
											"var lName = pm.globals.get(\"registerlname\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.lastName).to.include(lName);\r",
											"});\r",
											"\r",
											"var email1 = pm.globals.get(\"registeremail\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.email).to.include(email1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.get(\"registeremail\");\r",
											"var repository =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"registeremail\",repository);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registerfname}}\",\r\n\"lastname\":\"{{registerlname}}\",\r\n\"email\":\"{{registeremail}}\",\r\n\"password\":\"{{registerpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_02_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"First Name cannot be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"\",\r\n\"lastname\":\"\",\r\n\"email\":\"\",\r\n\"password\":\"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_03_Empty_First_Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"First Name cannot be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"\",\r\n\"lastname\":\"{{registerlname}}\",\r\n\"email\":\"{{registeremail}}\",\r\n\"password\":\"{{registerpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_04_Empty_Last_Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Last Name cannot be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registerfname}}\",\r\n\"lastname\":\"\",\r\n\"email\":\"{{registeremail}}\",\r\n\"password\":\"{{registerpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_05_Empty_Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Email cannot be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registerfname}}\",\r\n\"lastname\":\"{{registerlname}}\",\r\n\"email\":\"\",\r\n\"password\":\"{{registerpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_06_Empty_Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Password cannot be empty\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registerfname}}\",\r\n\"lastname\":\"{{registerlname}}\",\r\n\"email\":\"{{registeremail}}\",\r\n\"password\":\"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_07_Invalid_Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid email\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registerfname}}\",\r\n\"lastname\":\"{{registerlname}}\",\r\n\"email\":\"{{registerinvalidemail}}\",\r\n\"password\":\"{{registerpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_08_Invalid_Wrong_Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Password must contain at least one letter and one number\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registerfname}}\",\r\n\"lastname\":\"{{registerlname}}\",\r\n\"email\":\"{{registeremail}}\",\r\n\"password\":\"{{registerinvalidpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_09_Max_Char_Fname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"user validation failed: firstname: First name cannot be more than 26 characters\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.get(\"registeremail\");\r",
											"var repository =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"registeremail\",repository);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registermaxchar}}\",\r\n\"lastname\":\"{{registerlname}}\",\r\n\"email\":\"{{registeremail}}\",\r\n\"password\":\"{{registerpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_10_Max_Char_Lname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"user validation failed: lastname: Last name cannot be more than 26 characters\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.globals.get(\"registeremail\");\r",
											"var repository =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"registeremail\",repository);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"firstname\":\"{{registerfname}}\",\r\n\"lastname\":\"{{registermaxchar}}\",\r\n\"email\":\"{{registeremail}}\",\r\n\"password\":\"{{registerpassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "USER_DETAILS",
			"item": [
				{
					"name": "Ud_Edit_Details",
					"item": [
						{
							"name": "Ud_01_Edit_Details_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"eufname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.firstname).to.include(fname);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"{{aid1}}\",\"firstname\":\"{{eufname1}}\",\"lastname\":\"{{ulname1}}\",\"phone\":\"\",\"company\":\"\",\"timezone\":{\"value\":\"Pacific/Honolulu\",\"label\":\"(GMT-10:00) Hawaii\",\"offset\":-10,\"abbrev\":\"HAST\",\"altName\":\"Hawaii-Aleutian Standard Time\"}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editdetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"editdetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ud_02_Edit_Details_Max_Char",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Validation failed: firstname: First name cannot be more than 26 characters\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"{{aid1}}\",\"firstname\":\"{{registermaxchar}}\",\"lastname\":\"{{eufname1}}\",\"phone\":\"112233\",\"company\":\"fbaa\",\"timezone\":{\"value\":\"Asia/Kolkata\",\"label\":\"(GMT+5:30) Chennai, Kolkata, Mumbai, New Delhi\",\"offset\":5.5,\"abbrev\":\"IST\",\"altName\":\"India Standard Time\"}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editdetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"editdetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ud_03_Edit_Details_Invalid_Access__Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1214521",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"{{aid1}}\",\"firstname\":\"{{eufname1}}\",\"lastname\":\"{{ulname1}}\",\"phone\":\"\",\"company\":\"aaaa\",\"timezone\":{\"value\":null}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editdetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"editdetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ud_04_Edit_Details_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"{{invalid taskid}}\",\"firstname\":\"{{eufname1}}\",\"lastname\":\"{{ulname1}}\",\"phone\":\"\",\"company\":\"aaaa\",\"timezone\":{\"value\":null}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editdetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"editdetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ud_05_Edit_Details_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include( \"null\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"{{contactid1}}\",\"firstname\":\"{{eufname1}}\",\"lastname\":\"{{ulname1}}\",\"phone\":\"\",\"company\":\"aaaa\",\"timezone\":{\"value\":null}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editdetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"editdetails"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Ud_Get_Details",
					"item": [
						{
							"name": "Ud_01_Get_Details_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"ufname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.firstname).to.include(fname);\r",
											"});\r",
											"\r",
											"var lName = pm.globals.get(\"ulname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.lastname).to.include(lName);\r",
											"});\r",
											"\r",
											"var email1 = pm.globals.get(\"uemail1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.email).to.include(email1);\r",
											"});\r",
											"pm.globals.set(\"aid1\", jsonData._id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getdetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"getdetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ud_02_Get_Details_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "12121",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getdetails",
									"host": [
										"{{url}}"
									],
									"path": [
										"getdetails"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CONTACT",
			"item": [
				{
					"name": "Add_Contact",
					"item": [
						{
							"name": "Con_Add_01_Happy_Path",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"fName1\");\r",
											"var repositoryName ='tom'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"fName1\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"lName1\");\r",
											"var repositoryname =\"jerry\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"lName1\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"email01\");\r",
											"var repositoryy =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"email01\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact Created\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{fName1}}\",\"lName\":\"{{lName1}}\",\"owner\":\"{{owner1}}\",\"email\":\"{{email01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno1}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"Asia/Calcutta\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact Created\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"fName2\");\r",
											"var repositoryName ='chin'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"fName2\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"lName2\");\r",
											"var repositoryname =\"chan\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"lName2\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"email02\");\r",
											"var repositoryy =\"chin\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"email02\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{fName2}}\",\"lName\":\"{{lName2}}\",\"owner\":\"{{owner2}}\",\"email\":\"{{email02}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno2}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"Asia/Calcutta\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact Created\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"fName3\");\r",
											"var repositoryName ='ninja'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"fName3\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"lName3\");\r",
											"var repositoryname =\"hatori\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"lName3\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"email03\");\r",
											"var repositoryy =\"hatorii\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"email03\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{fName3}}\",\"lName\":\"{{lName3}}\",\"owner\":\"{{owner2}}\",\"email\":\"{{email03}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno3}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"Asia/Calcutta\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact Created\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"fName4\");\r",
											"var repositoryName ='chhin'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"fName4\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"lName4\");\r",
											"var repositoryname =\"chann\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"lName4\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"email04\");\r",
											"var repositoryy =\"chhanni\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"email04\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{fName4}}\",\"lName\":\"{{lName4}}\",\"owner\":\"{{owner2}}\",\"email\":\"{{email04}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno4}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"Asia/Calcutta\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{fName1}}\",\"lName\":\"{{lName1}}\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"email\":\"{{email01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno1}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"Asia/Calcutta\"}"
								},
								"url": {
									"raw": "{{url}}/addcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_06_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Email is required\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"\",\"lName\":\"\",\"owner\":\"\",\"email\":\"\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"\"}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Contact",
					"item": [
						{
							"name": "Con_Get_All_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contactid1\");\r",
											"\r",
											"var fName1 = pm.globals.get(\"fName1\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.results, c => c.fName === fName1),\r",
											"  item => { userIds.push(item.id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contactid1\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contactid2\");\r",
											"\r",
											"var fName2 = pm.globals.get(\"fName2\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.results, c => c.fName === fName2),\r",
											"  item => { userIds.push(item.id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contactid2\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_03_Happy_Path Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contactid3\");\r",
											"\r",
											"var fName3 = pm.globals.get(\"fName3\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.results, c => c.fName === fName3),\r",
											"  item => { userIds.push(item.id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contactid3\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_04_Happy_Path Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contactid4\");\r",
											"\r",
											"var fName4 = pm.globals.get(\"fName4\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.results, c => c.fName === fName4),\r",
											"  item => { userIds.push(item.id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contactid4\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "122143535412425454656534543",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Contact/:Id",
					"item": [
						{
							"name": "Con_Get_All_01_Happy_Path Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contactid1\");\r",
											"\r",
											"var fName1 = pm.globals.get(\"fName1\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.results, c => c.fName === fName1),\r",
											"  item => { userIds.push(item.id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contactid1\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var fName = pm.globals.get(\"fName1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].fName).to.include(fName);\r",
											"});\r",
											"\r",
											"var lName = pm.globals.get(\"lName1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].lName).to.include(lName);\r",
											"});\r",
											"\r",
											"var email = pm.globals.get(\"email01\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].email).to.include(email);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcontact/{{contactid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontact",
										"{{contactid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcontact/{{contactid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontact",
										"{{contactid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcontact/{{invalid contact id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontact",
										"{{invalid contact id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_04_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcontact/{{contactid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontact",
										"{{contactid2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Contact",
					"item": [
						{
							"name": "Con_Edit_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{efname1}}\",\"lName\":\"{{lName1}}\",\"email\":\"{{email01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno1}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"owner\":\"{{owner1}}\",\"tags\":[],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"AccountId\":\"{{accountid1}}\",\"notes\":[],\"id\":\"{{contactid1}}\",\"company\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1212121212",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{efname1}}\",\"lName\":\"{{lName1}}\",\"email\":\"{{email01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno1}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"owner\":\"{{owner1}}\",\"tags\":[],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"AccountId\":\"{{accountid1}}\",\"notes\":[],\"id\":\"{{contactid1}}\",\"company\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{efname1}}\",\"lName\":\"{{lName1}}\",\"email\":\"{{email01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno1}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"owner\":\"{{owner1}}\",\"tags\":[],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"AccountId\":\"{{accountid1}}\",\"notes\":[],\"id\":\"{{invalid contact id}}\",\"company\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Edit_04_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact not found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{efname1}}\",\"lName\":\"{{lName1}}\",\"email\":\"{{email01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno1}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"owner\":\"{{owner1}}\",\"tags\":[],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"AccountId\":\"{{accountid1}}\",\"notes\":[],\"id\":\"{{contactid2}}\",\"company\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcontact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Contact_Tag",
					"item": [
						{
							"name": "Con_Add_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{contactid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact Created\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"fName2\");\r",
											"var repositoryName ='chin'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"fName2\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"lName2\");\r",
											"var repositoryname =\"chan\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"lName2\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"email02\");\r",
											"var repositoryy =\"chin\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"email02\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{fName2}}\",\"lName\":\"{{lName2}}\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"email\":\"{{email02}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno2}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"Asia/Calcutta\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{contactid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{contactid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{invalid contact id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Contact found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{contactid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_06_Empty_Tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"\",\"selected\":[\"{{contactid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Mul_Tag_07_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{contactid3}}\",\"{{contactid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_08_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var tag = pm.globals.get(\"tag1\");\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"tag\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontact/{{contactid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontact",
										"{{contactid1}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Contact_Tag",
					"item": [
						{
							"name": "Con_Get_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"tag1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var tag = pm.globals.get(\"tag2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{invalid contact id}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{invalid contact id}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Tags Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Contact_Tag",
					"item": [
						{
							"name": "Con_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{contactid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Mul_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{contactid3}}\",\"{{contactid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{contactid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{invalid contact id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Contact found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{contactid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Contact",
					"item": [
						{
							"name": "Con_Archive_01_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Contact(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_02_Archive_Mul_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Contact(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid3}}\",\"{{contactid4}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_03_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Contact(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_Mul_Tag_04_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Contact(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid3}}\",\"{{contactid4}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1235466262",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{invalid contact id}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_07_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No  Contact(s) to Archive\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Contact",
					"item": [
						{
							"name": "Con_Delete__01_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contactid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_Mul_02_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contactid3}}\",\"{{contactid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "35465465463543654",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contactid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{invalid contact id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"You are not authorized to perform this action\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contactid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var conid = pm.globals.get(\"contactid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"conid\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create_filter_Contact",
					"item": [
						{
							"name": "Con_Fil_01_Hpath_SortBy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"Filter_Con_01\", jsonData.data.id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"f02\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":\"Created\",\"contact_sortOrder\":true,\"filterType\":\"contact\",\"contact_tags\":[],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_02_Hpath_Contactowner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"f2\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":true,\"filterType\":\"contact\",\"contact_tags\":[],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_03_Hpath_Tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Tag\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":[\"cartoon\"],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_04_Hpath_Title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Title\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":null,\"contact_company\":null,\"contact_title\":\"title\",\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_05_Hpath_Stage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Stage\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":null,\"contact_company\":null,\"contact_title\":null,\"contact_stage\":\"stage\",\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_06_Hpath_Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Type\",\"sharing\":\"private\",\"contact_type\":\"Lead\",\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":null,\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_07_Hpath_State",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"State\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":null,\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":\"State\",\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_08_Hpath_Country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"country\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":null,\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":\"country\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_09_Hpath_Company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"company\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":null,\"contact_company\":{\"value\":\"6230c68403da23cb31e4b3de\",\"label\":\"gowmi company\"},\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_10_Hpath_Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"fs\",\"sharing\":\"public\",\"contact_type\":null,\"contact_sortBy\":null,\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":[\"cartoon\"],\"contact_company\":{\"value\":\"6230c68403da23cb31e4b3de\",\"label\":\"gowmi company\"},\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_10_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "112233",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"filter\",\"sharing\":\"private\",\"contact_type\":\"Customer\",\"contact_sortBy\":null,\"contact_sortOrder\":true,\"contact_userRef\":\"6217180ab3f143f6af601e73\",\"filterType\":\"contact\",\"contact_tags\":[\"cartoon\"],\"contact_company\":{\"value\":\"6230c68403da23cb31e4b3de\",\"label\":\"gowmi company\"},\"contact_title\":null,\"contact_stage\":\"Cold\",\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_11_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Filter name is required!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"\",\"sharing\":\"\",\"contact_type\":\"\",\"contact_sortBy\":\"\",\"contact_sortOrder\":true,\"contact_userRef\":\"\",\"filterType\":\"\",\"contact_tags\":[\"\"],\"contact_company\":{\"value\":\"\",\"label\":\"\"},\"contact_title\":\"\",\"contact_stage\":\"\",\"contact_city\":\"\",\"contact_state\":\"\",\"contact_country\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Filter_Contact",
					"item": [
						{
							"name": "Con_Fil_Edit_01_Happypath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"f22\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":\"Created\",\"contact_sortOrder\":true,\"filterType\":\"contact\",\"contact_tags\":[],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Con_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Con_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"f22\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":\"Created\",\"contact_sortOrder\":true,\"filterType\":\"contact\",\"contact_tags\":[],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Con_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Con_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"f22\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":\"Created\",\"contact_sortOrder\":true,\"filterType\":\"contact\",\"contact_tags\":[],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/123123",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"123123"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_Edit_04_Empty_Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Empty Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"\",\"sharing\":\"\",\"contact_type\":null,\"contact_sortBy\":\"\",\"contact_sortOrder\":null,\"filterType\":\"contact\",\"contact_tags\":[],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Con_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Con_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_Edit_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Unable to find the Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"f22\",\"sharing\":\"private\",\"contact_type\":null,\"contact_sortBy\":\"Created\",\"contact_sortOrder\":true,\"filterType\":\"contact\",\"contact_tags\":[],\"contact_company\":null,\"contact_title\":null,\"contact_stage\":null,\"contact_city\":null,\"contact_state\":null,\"contact_country\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Con_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Con_01}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Filter_Contact",
					"item": [
						{
							"name": "Con_Fil_Delete_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Filter deleted successfully!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Con_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Con_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_Delete_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Con_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Con_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_Delete_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/112233",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"112233"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Fil_Delete_04_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Filter not found!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Con_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Con_01}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "COMPANY",
			"item": [
				{
					"name": "Add_Company",
					"item": [
						{
							"name": "Comp_Add_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid1\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb1\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"compweb1\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname1}}\",\"phone\":{{compphno1}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"tags\":[\"first\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Add_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid2\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb2\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"235\";\r",
											"pm.globals.set(\"compweb2\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname2}}\",\"phone\":{{compphno2}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb2}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d7cf0ffb1208dee619b1e0\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Add_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid3\",jsonData.id);\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb3\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb3\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"abc\";\r",
											"pm.globals.set(\"compweb3\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname1}}\",\"phone\":\"{{compphno1}}\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb3}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d7cf0ffb1208dee619b1e0\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Add_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid4\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb4\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb4\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"abc\";\r",
											"pm.globals.set(\"compweb4\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname2}}\",\"phone\":\"{{compphno2}}\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb4}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d7cf0ffb1208dee619b1e0\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Add_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname1}}\",\"phone\":{{compphno1}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"tags\":[\"first\"]}"
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Add_06_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"\",\"phone\":\"\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Company/:Id",
					"item": [
						{
							"name": "Comp_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid1\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb1\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"compweb1\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname1}}\",\"phone\":{{compphno1}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"tags\":[\"first\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Get_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var compname = pm.globals.get(\"compname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var phno = pm.globals.get(\"compphno1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].phone).to.include(phno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].website).to.include(compweb);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcompany/{{companyid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcompany",
										"{{companyid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Get_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcompany/{{companyid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcompany",
										"{{companyid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Get_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcontact/{{invalid contact id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontact",
										"{{invalid contact id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Get_04_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Company Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getcompany/{{companyid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcompany",
										"{{companyid2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Company",
					"item": [
						{
							"name": "Comp_Get_All_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var companyid = pm.globals.get(\"companyid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											" pm.expect(pm.response.text()).to.include(companyid);\r",
											"});\r",
											"\r",
											"var compname = pm.globals.get(\"compname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compweb);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcompanies?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcompanies"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Get_All_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "122143535412425454656534543",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcompanies?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcompanies"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Get_All_03_Pagination",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var companyid = pm.globals.get(\"companyid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(companyid);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcompanies?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcompanies"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Company",
					"item": [
						{
							"name": "Comp_Edit_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"ecompname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"ecompphno1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb1\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"compweb1\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{ecompname1}}\",\"phone\":\"{{ecompphno1}}\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb2}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"archive\":false,\"tags\":[\"first\"],\"AccountId\":\"61d3f8fbf8a5b7cabe9ff5e1\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"id\":\"{{companyid2}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Edit_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1212121212",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{ecompname1}}\",\"phone\":\"{{ecompphno1}}\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{ecompweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"archive\":false,\"tags\":[\"first\"],\"AccountId\":\"61d3f8fbf8a5b7cabe9ff5e1\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"id\":\"{{companyid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Edit_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{ecompname1}}\",\"phone\":\"{{ecompphno1}}\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{ecompweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"archive\":false,\"tags\":[\"first\"],\"AccountId\":\"61d3f8fbf8a5b7cabe9ff5e1\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"id\":\"121212\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Edit_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Company Not Found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb1\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"compweb1\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{ecompname1}}\",\"phone\":\"{{ecompphno1}}\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"archive\":false,\"tags\":[\"first\"],\"AccountId\":\"61d3f8fbf8a5b7cabe9ff5e1\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"id\":\"{{companyid2}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"editcompany"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Account_Tag",
					"item": [
						{
							"name": "Comp_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid1\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb1\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"compweb1\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname1}}\",\"phone\":{{compphno1}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"tags\":[\"first\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Add_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid2\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb2\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"235\";\r",
											"pm.globals.set(\"compweb2\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname2}}\",\"phone\":{{compphno2}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb2}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d7cf0ffb1208dee619b1e0\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{companyid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Mul_Tag_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid3}}\",\"{{companyid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"TEST\",\"selected\":[\"{{companyid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{invalid contact id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Account found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{contactid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_07_Empty_Tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"\",\"selected\":[\"{{contactid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addaccounttag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Account_Tag",
					"item": [
						{
							"name": "Comp_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid1\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb1\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"compweb1\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname1}}\",\"phone\":{{compphno1}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"tags\":[\"first\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"tag1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Add_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"companyid2\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"compname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"compphno2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.phone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"compweb2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"compweb2\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"235\";\r",
											"pm.globals.set(\"compweb2\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{compname2}}\",\"phone\":{{compphno2}},\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{compweb2}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"61d7cf0ffb1208dee619b1e0\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{companyid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var tag = pm.globals.get(\"tag2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{123123}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Tags Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getaccounttag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create_Filter_Account",
					"item": [
						{
							"name": "Acc_Fil_01_Hp_Sortby",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"Filter_Acc_01\", jsonData.data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"sort\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_02_Hp_Company_Owner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"company\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"company_userRef\":\"6217180ab3f143f6af601e73\",\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_03_Hp_Tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Tags\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"company_userRef\":null,\"filterType\":\"company\",\"company_tags\":[\"cartooon\"],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_04_Hp_No_Of_Employees",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"No of employees\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":null,\"company_userRef\":\"\",\"filterType\":\"company\",\"company_tags\":[\"\"],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,100],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_05_Hp_Industry",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Industry\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":null,\"company_userRef\":\"\",\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":null,\"company_industry\":\"Industry\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_06_Hp_State",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"State\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":null,\"company_userRef\":\"\",\"filterType\":\"company\",\"company_tags\":[],\"company_state\":\"state\",\"company_country\":null,\"company_noOfEmps\":null,\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_08_Hp_Country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Country\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":null,\"company_userRef\":\"\",\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":\"country\",\"company_noOfEmps\":null,\"company_industry\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_09_Hp_Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Filter\",\"sharing\":\"public\",\"company_sortBy\":null,\"company_sortOrder\":true,\"company_userRef\":\"6217180ab3f143f6af601e73\",\"filterType\":\"company\",\"company_tags\":[\"cartoon\"],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,100],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "112233",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Filter\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"company_userRef\":\"6217180ab3f143f6af601e73\",\"filterType\":\"company\",\"company_tags\":[\"cartoon\"],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,100],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_03_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Filter name is required!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"\",\"sharing\":\"\",\"company_sortBy\":\"\",\"company_sortOrder\":\"\",\"company_userRef\":\"\",\"filterType\":\"\",\"company_tags\":[\"\"],\"company_state\":\"\",\"company_country\":\"\",\"company_noOfEmps\":[],\"company_industry\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Filter_Account",
					"item": [
						{
							"name": "Acc_Fil_Edit_01_Happypath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"sortings\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Acc_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Acc_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"sortings\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Acc_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Acc_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"sortings\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/123123",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"123123"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_Edit_04_Empty_Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Empty Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"sortings\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":null,\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Acc_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Acc_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_Edit_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Unable to find the Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"sortings\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Acc_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Acc_01}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Filter_Account",
					"item": [
						{
							"name": "Acc_Fil_Delete_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Filter deleted successfully!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Acc_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Acc_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_Delete_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Acc_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Acc_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_Delete_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/112233",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"112233"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Fil_Delete_04_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Filter not found!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Acc_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Acc_01}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Account_Tag",
					"item": [
						{
							"name": "Acc_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removeaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removeaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Mul_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid3}}\",\"{{companyid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removeaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removeaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removeaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removeaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{invalid contact id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removeaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removeaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Company found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removeaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removeaccounttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"tag1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getaccounttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getaccounttag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Company",
					"item": [
						{
							"name": "Comp_Archive_01_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Account(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_Mul_02_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Account(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid3}}\",\"{{companyid4}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_03_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Account(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_Mul_04_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Account(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid3}}\",\"{{companyid4}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1235466262",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{invalid contact id}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Records to Archive\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{companyid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecompany"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Company",
					"item": [
						{
							"name": "Comp_Delete__01_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Account(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{companyid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_Mul_02_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{companyid3}}\",\"{{companyid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "35465465463543654",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{companyid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{invalid contact id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"You are not authorized to perform this action\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{company1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletecompany",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletecompany"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var conid = pm.globals.get(\"companyid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"conid\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcontact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcontact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "TASK",
			"item": [
				{
					"name": "Save_Task",
					"item": [
						{
							"name": "Tas_Save_Task_01_Happy_Path_Note_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid1\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"fName1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contact).to.include(fname);\r",
											"});\r",
											"var uname = pm.globals.get(\"ufname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.assignedUser).to.include(uname);\r",
											"});\r",
											"var id = pm.globals.get(\"contactid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contactRef).to.include(id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"notes\":\"ravi\",\"date\":\"2022-03-10T18:30:00.000Z\",\"assignedUser\":{\"value\":\"6217180ab3f143f6af601e73\",\"label\":\"{{ufname1}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_02_Happy_Path_Call_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid2\",jsonData.id);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"notes\":\"test\",\"date\":\"2022-01-27T18:30:00.000Z\",\"callResult\":\"No Answer\",\"assignedUser\":{\"label\":\"{{ufname1}}\"},\"type\":\"Call Log\",\"value\":1},\"option\":\"Call Log\",\"value\":1}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_03_Happy_Path_Email_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"description\":\"\",\"date\":\"2022-02-03T18:30:00.000Z\",\"assignedUser\":{\"label\":\"{{ufname1}}\"},\"type\":\"Email\",\"value\":2},\"option\":\"Email\",\"value\":2}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_04_Happy_Path_Linkedin_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"description\":\"\",\"date\":\"2022-02-25T18:30:00.000Z\",\"action\":\"Profile Research\",\"assignedUser\":{\"label\":\"{{ufname1}}\"},\"type\":\"LinkedIn\",\"value\":3},\"option\":\"LinkedIn\",\"value\":3}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_05_Happy_Path_Whatsapp_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"description\":\"\",\"date\":\"2022-01-27T18:30:00.000Z\",\"assignedUser\":{\"label\":\"{{ufname1}}\"},\"type\":\"WhatsApp\",\"value\":6},\"option\":\"WhatsApp\",\"value\":6}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_06_Happy_Path_Meeting_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"action\":\"Message\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"description\":\"\",\"date\":\"2022-01-28T18:30:00.000Z\",\"assignedUser\":{\"label\":\"{{ufname1}}\"},\"type\":\"Meeting\",\"value\":7},\"option\":\"Meeting\",\"value\":7}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_07_Happy_Path_Message_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid3\",jsonData.id);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"action\":\"Connection Request Sent\",\"contact\":{\"value\":\"{{contactid3}}\",\"label\":\"{{eufname1}}\"},\"description\":\"\",\"date\":\"2022-01-28T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname1}}\"},\"type\":\"Meeting\",\"value\":7},\"option\":\"Meeting\",\"value\":7}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_08_Happy_Path_Twitter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid4\",jsonData.id);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid4}}\",\"label\":\"{{fName1}}\"},\"description\":\"\",\"date\":\"2022-01-13T08:30:00.224Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname1}}\"},\"type\":\"SMS\",\"value\":8},\"option\":\"SMS\",\"value\":8}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_10_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"fName2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contact).to.include(fname);\r",
											"});\r",
											"var uname = pm.globals.get(\"ufname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.assignedUser).to.include(uname);\r",
											"});\r",
											"var id = pm.globals.get(\"contactid2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contactRef).to.include(id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid2}}\",\"label\":\"{{fName2}}\"},\"notes\":\"new\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname2}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_11_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "zI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid2}}\",\"label\":\"{{fName2}}\"},\"notes\":\"new\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname2}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}"
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_13_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Date is required\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":\"\",\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_14_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid2}}\",\"label\":\"{{fName2}}\"},\"notes\":\"new\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname2}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Tasks",
					"item": [
						{
							"name": "Tas_Get_All_Task_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var id = pm.globals.get(\"taskid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getalltasks?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getalltasks"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Get_All_Task_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getalltasks",
									"host": [
										"{{url}}"
									],
									"path": [
										"getalltasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Get_All_Task_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "3684365",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getalltasks",
									"host": [
										"{{url}}"
									],
									"path": [
										"getalltasks"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Task",
					"item": [
						{
							"name": "Tas_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"{{taskid1}}\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"notes\":\"newwwwwwwwwwwww\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname1}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/edittask",
									"host": [
										"{{url}}"
									],
									"path": [
										"edittask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "234787",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"{{taskid1}}\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"notes\":\"newwwwwwwwwwwww\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname1}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/edittask",
									"host": [
										"{{url}}"
									],
									"path": [
										"edittask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_04_Edit_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Invalid ID or ID is not provided\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"1111\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"notes\":\"newwwwwwwwwwwww\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname1}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/edittask",
									"host": [
										"{{url}}"
									],
									"path": [
										"edittask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_05_Edit_mismatch_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Task match the ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"{{taskid1}}\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"notes\":\"newwwwwwwwwwwww\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname1}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/edittask",
									"host": [
										"{{url}}"
									],
									"path": [
										"edittask"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Task_Tag",
					"item": [
						{
							"name": "Tas_Save_Task_01_Happy_Path_Note_Task Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid1\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"fName1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contact).to.include(fname);\r",
											"});\r",
											"var uname = pm.globals.get(\"ufname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.assignedUser).to.include(uname);\r",
											"});\r",
											"var id = pm.globals.get(\"contactid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contactRef).to.include(id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid1}}\",\"label\":\"{{fName1}}\"},\"notes\":\"ravi\",\"date\":\"2022-03-10T18:30:00.000Z\",\"assignedUser\":{\"value\":\"6217180ab3f143f6af601e73\",\"label\":\"{{ufname1}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_10_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid2\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"fName2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contact).to.include(fname);\r",
											"});\r",
											"var uname = pm.globals.get(\"ufname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.assignedUser).to.include(uname);\r",
											"});\r",
											"var id = pm.globals.get(\"contactid2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contactRef).to.include(id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid2}}\",\"label\":\"{{fName2}}\"},\"notes\":\"new\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname2}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Mul_Tag_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tasktag1}}\",\"selected\":[\"{{taskid3}}\",\"{{taskid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "3456789",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{invalid taskid}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_06_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Notes found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_07_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"\",\"selected\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Task_Tag",
					"item": [
						{
							"name": "Tas_Save_Task_01_Happy_Path_Note_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid1\",jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"61d5340b4f613295b66344c5\",\"label\":\"monisha keerthi\"},\"notes\":\"new\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"haashini kowshika\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Get_Tag_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"tag1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Save_Task_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"taskid2\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var fname = pm.globals.get(\"fName2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contact).to.include(fname);\r",
											"});\r",
											"var uname = pm.globals.get(\"ufname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.assignedUser).to.include(uname);\r",
											"});\r",
											"var id = pm.globals.get(\"contactid2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.contactRef).to.include(id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"formData\":{\"id\":\"\",\"contact\":{\"value\":\"{{contactid2}}\",\"label\":\"{{fName2}}\"},\"notes\":\"new\",\"date\":\"2022-01-20T11:00:00.000Z\",\"assignedUser\":{\"value\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"label\":\"{{ufname2}}\"},\"type\":\"Note\",\"value\":0},\"option\":\"Note\",\"value\":0}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/savetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"savetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Add_Tag_05_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{taskid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Get_Tag_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var tag = pm.globals.get(\"tag2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Get_Tag_07_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Get_Tag_08_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{invalid taskid}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettasktag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Task_Tag",
					"item": [
						{
							"name": "Tas_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Remove_Mul_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tasktag1}}\",\"selected\":[\"{{taskid3}}\",\"{{taskid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Remove_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23456789",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Remove_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{invalid taskid}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetasktag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Remove_Tag_05_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Task found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetasktag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetasktag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Task",
					"item": [
						{
							"name": "Tas_Archive_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Task(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Archive_Mul_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Task(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid3}}\",\"{{taskid4}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Archive_Already_03_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Task(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Archive_Already_Mul_04_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Task(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid3}}\",\"{{taskid4}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "121212",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{taskid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{invalid contact id}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Archive_07_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Records to Archive\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetask"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Task",
					"item": [
						{
							"name": "Tas_01_Delete_Task_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Task(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_02_Delete_Mul_Task_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Task(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{taskid3}}\",\"{{taskid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_03_Delete_invalid_access_token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "7899876",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{taskid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_04_Delete_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{invalid task id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetask"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_05_Delete_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Task(s) to Delete\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{taskid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetask",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetask"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Complete_Task_Id Copy",
					"item": [
						{
							"name": "Tas_01_Complete_Task_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": \"false\",\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": \"true\",\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tag s\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/completetask/{{taskid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"completetask",
										"{{taskid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_02_Complete_Task_Id_invalid_access_token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "7899876",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": \"false\",\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": \"true\",\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tag s\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/completetask/{{taskid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"completetask",
										"{{taskid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_04_Complete_Task_id_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": \"false\",\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": \"true\",\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tag s\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/completetask/{{invalid taskid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"completetask",
										"{{invalid taskid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_05_Complete_Task_Id_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": \"false\",\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": \"true\",\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tag s\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/completetask/{{taskid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"completetask",
										"{{taskid2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Not_Complete_Task_Id Copy",
					"item": [
						{
							"name": "Tas_01_Complete_Task_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": false,\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": false,\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tags\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/notcompletetask/{{taskid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"notcompletetask",
										"{{taskid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_02_Complete_Task_Id_invalid_access_token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "7899876",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": \"false\",\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": \"true\",\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tag s\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/completetask/{{taskid1}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"completetask",
										"{{taskid1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_04_Complete_Task_id_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": \"false\",\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": \"true\",\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tag s\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/completetask/{{invalid taskid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"completetask",
										"{{invalid taskid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_05_Complete_Task_Id_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"AccountId\": \"61e7fc3309db1a878f94c3b2\",\r\n\"CreatedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"LastModifiedBy\": \"61e7fc3309db1a878f94c3b3\",\r\n\"archive\": false,\r\n\"assignedUser\": \"keer sunny\",\r\n\"completed\": false,\r\n\"contact\": \"tom987 489jerry\",\r\n\"contactRef\": \"61fcdc366e2851f3040a1e49\",\r\n\"date\": \"2022-02-18T03:30:00.000Z\",\r\n\"id\": \"620c71db8ff8468fed36ec1b\",\r\n\"notes\": \"\",\r\n\"tags\": \"[]\",\r\n\"type\": \"Note\",\r\n\"userRef\": \"61e7fc3309db1a878f94c3b3\",\r\n\"value\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/notcompletetask/{{taskid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"notcompletetask",
										"{{taskid2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create_Filter_Task",
					"item": [
						{
							"name": "Tas_Fil_01_Hp_Date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"Filter_Tas_01\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Date\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":true,\"task_sortBy\":\"date\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_02_Hp_Owner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Owner\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":\"\",\"task_sortBy\":\"\",\"task_userRef\":\"6217180ab3f143f6af601e73\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_03_Hp_Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Type\",\"sharing\":\"private\",\"task_type\":[\"Email\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":null,\"task_sortBy\":\"\",\"task_userRef\":null,\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_04_Hp_Date_Range",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Daterange\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"2022-02-06T18:30:00.000Z\",\"2022-04-29T18:30:00.000Z\"],\"task_completed\":null,\"task_sortOrder\":null,\"task_sortBy\":\"\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_05_Hp_Tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Tags\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":null,\"task_sortBy\":\"\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"cartoon\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_06_Hp_Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Status\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":true,\"task_sortOrder\":null,\"task_sortBy\":\"\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_07_Hp_Team",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Team\",\"sharing\":\"public\",\"task_type\":[\"Email\"],\"task_date\":[\"2022-02-06T18:30:00.000Z\",\"2022-04-29T18:30:00.000Z\"],\"task_completed\":true,\"task_sortOrder\":null,\"task_sortBy\":\"Date\",\"task_userRef\":\"6217180ab3f143f6af601e73\",\"filterType\":\"tasks\",\"task_tags\":[\"cartoon\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_08_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "112233",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Filter\",\"sharing\":\"private\",\"task_type\":[\"Email\"],\"task_date\":[\"2022-02-06T18:30:00.000Z\",\"2022-04-29T18:30:00.000Z\"],\"task_completed\":true,\"task_sortOrder\":true,\"task_sortBy\":\"date\",\"task_userRef\":\"6217180ab3f143f6af601e73\",\"filterType\":\"tasks\",\"task_tags\":[\"cartoon\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_09_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Filtername is requried\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"\",\"sharing\":\"\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":\"\",\"task_sortOrder\":\"\",\"task_sortBy\":\"\",\"task_userRef\":\"\",\"filterType\":\"\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/createfilter",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"createfilter"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Filter_Task",
					"item": [
						{
							"name": "Tas_Fil_Edit_01_Happypath",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Datefilter\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":true,\"task_sortBy\":\"date\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Tas_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Tas_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Datefilter\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":true,\"task_sortBy\":\"date\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Tas_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Tas_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Datefilter\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":true,\"task_sortBy\":\"date\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/123123",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"123123"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_Edit_04_Empty_Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Empty Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"Datefilter\",\"sharing\":\"private\",\"task_type\":[\"\"],\"task_date\":[\"\",\"\"],\"task_completed\":null,\"task_sortOrder\":null,\"task_sortBy\":\"\",\"task_userRef\":\"\",\"filterType\":\"tasks\",\"task_tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Tas_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Tas_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_Edit_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Unable to find the Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"filterName\":\"sortings\",\"sharing\":\"private\",\"company_sortBy\":null,\"company_sortOrder\":true,\"filterType\":\"company\",\"company_tags\":[],\"company_state\":null,\"company_country\":null,\"company_noOfEmps\":[0,0],\"company_industry\":null}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/filter/updatefilter/{{Filter_Tas_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"updatefilter",
										"{{Filter_Tas_01}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Filter_Task",
					"item": [
						{
							"name": "Tas_Fil_Delete_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Tas_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Tas_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_Delete_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Tas_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Tas_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_Delete_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/112233",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"112233"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tas_Fil_Delete_04_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Unable to find ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/filter/delete/{{Filter_Tas_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"filter",
										"delete",
										"{{Filter_Tas_01}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "TEMPLATES",
			"item": [
				{
					"name": "Add_Template",
					"item": [
						{
							"name": "Tem_Add_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"tempid1\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"temname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"temsub1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{temname1}}\",\"subject\":\"{{temsub1}}\",\"description\":\"<p>Very halpful</p>\",\"tags\":[],\"type\":\"personal\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"tempid2\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"temname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"temsub2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{temname2}}\",\"subject\":\"{{temsub2}}\",\"description\":\"<p>Very useful to read the books</p>\",\"tags\":[\"selective\"],\"type\":\"personal\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"tempid3\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"temname3\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"temsub3\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{temname3}}\",\"subject\":\"{{temsub3}}\",\"description\":\"<p>Very halpful</p>\",\"tags\":[],\"type\":\"personal\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"tempid4\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"temname4\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"temsub4\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{temname4}}\",\"subject\":\"{{temsub4}}\",\"description\":\"<p>Very halpful</p>\",\"tags\":[],\"type\":\"personal\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{fName1}}\",\"lName\":\"{{lName1}}\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"email\":\"{{email01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"{{phno1}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"Asia/Calcutta\"}"
								},
								"url": {
									"raw": "{{url}}/addtemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_06_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Please select a type\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"\",\"subject\":\"\",\"description\":\"\",\"tags\":[],\"type\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Templates",
					"item": [
						{
							"name": "Tem_Get_All_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var tempid = pm.globals.get(\"tempid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											" pm.expect(pm.response.text()).to.include(tempid);\r",
											"});\r",
											"\r",
											"var temname = pm.globals.get(\"temname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"temsub1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(temsub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getalltemplates?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getalltemplates"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_All_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "122143535412425454656534543",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcompanies?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcompanies"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_All_03_Pagination",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var tempid = pm.globals.get(\"tempid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tempid);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getalltemplates?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getalltemplates"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Templates",
					"item": [
						{
							"name": "Tem_Edit_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{temname1}}\",\"subject\":\"{{temps}}\",\"description\":\"<p>Template</p>\",\"tags\":[],\"type\":\"personal\",\"archive\":false,\"CreatedBy\":\"{{owner1}}\",\"LastModifiedBy\":\"{{owner1}}\",\"AccountId\":\"{{accountid1}}\",\"attachments\":[],\"date\":\"2022-04-06T12:15:37.954Z\",\"id\":\"{{tempid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://sales-qa-server.herokuapp.com/edittemplate",
									"protocol": "https",
									"host": [
										"sales-qa-server",
										"herokuapp",
										"com"
									],
									"path": [
										"edittemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1212121212",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{ecompname1}}\",\"phone\":\"{{ecompphno1}}\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"twitter\":\"\",\"website\":\"{{ecompweb1}}\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"archive\":false,\"tags\":[\"first\"],\"AccountId\":\"61d3f8fbf8a5b7cabe9ff5e1\",\"owner\":\"61d3f8fbf8a5b7cabe9ff5e2\",\"id\":\"{{companyid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/edittemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"edittemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{temname1}}\",\r\n    \"subject\": \"{{temsub1}}\",\r\n    \"description\": \"<p>Very halpful very helpful</p>\",\r\n    \"tags\": [],\r\n    \"type\": \"personal\",\r\n    \"archive\": false,\r\n    \"CreatedBy\": \"6217180ab3f143f6af601e73\",\r\n    \"LastModifiedBy\": \"6217180ab3f143f6af601e73\",\r\n    \"AccountId\": \"6217180ab3f143f6af601e72\",\r\n    \"attachments\": [],\r\n    \"date\": \"2022-03-01T11:58:23.959Z\",\r\n    \"id\": \"{{invalid contact id}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/edittemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"edittemplate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Edit_04_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{temname1}}\",\r\n    \"subject\": \"{{temsub1}}\",\r\n    \"description\": \"<p>Very halpful very helpful</p>\",\r\n    \"tags\": [],\r\n    \"type\": \"personal\",\r\n    \"archive\": false,\r\n    \"CreatedBy\": \"6217180ab3f143f6af601e73\",\r\n    \"LastModifiedBy\": \"6217180ab3f143f6af601e73\",\r\n    \"AccountId\": \"6217180ab3f143f6af601e72\",\r\n    \"attachments\": [],\r\n    \"date\": \"2022-03-01T11:58:23.959Z\",\r\n    \"id\": \"621e0a5f7aed3e6d078b663e\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/edittemplate",
									"host": [
										"{{url}}"
									],
									"path": [
										"edittemplate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Template_Tag",
					"item": [
						{
							"name": "Tem_Add_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag1}}\",\"selected\":[\"{{tempid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag2}}\",\"selected\":[\"{{tempid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Mul_Tag_03_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{tempid3}}\",\"{{tempid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag1}}\",\"selected\":[\"{{tempid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag1}}\",\"selected\":[\"{{teminvalid}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Template found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag2}}\",\"selected\":[\"{{tempid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_07_Empty_Tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"\",\"selected\":[\"{{contactid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addtemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addtemplatetag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Template_Tag",
					"item": [
						{
							"name": "Tem_Get_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"temtag1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var tag = pm.globals.get(\"temtag2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{teminvalid}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Template with the ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettemplatetag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Template_Tag",
					"item": [
						{
							"name": "Tem_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag1}}\",\"selected\":[\"{{tempid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Mul_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{tempid3}}\",\"{{tempid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag1}}\",\"selected\":[\"{{tempid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag1}}\",\"selected\":[\"{{teminvalid}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Template found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{temtag1}}\",\"selected\":[\"{{tempid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removetemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removetemplatetag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"temtag1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/gettemplatetag",
									"host": [
										"{{url}}"
									],
									"path": [
										"gettemplatetag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Template",
					"item": [
						{
							"name": "Tem_Archive_01_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Template(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_Mul_02_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Template(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid3}}\",\"{{tempid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_03_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Template(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_Mul_04_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Template(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid3}}\",\"{{tempid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1235466262",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{teminvalid}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_07_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Records to Archive\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{tempid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivetemplates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Template",
					"item": [
						{
							"name": "Tem_Delete__01_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Template(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{tempid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Delete_Mul_02_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Template(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{tempid3}}\",\"{{tempid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_Delete_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "35465465463543654",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{tempid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_Delete_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{teminvalid}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_Delete_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Templates(s) not exists\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{tempid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletetemplates",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletetemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_Delete_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var tempid = pm.globals.get(\"tempid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"tempid\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getalltemplates?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getalltemplates"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "SNIPPETS",
			"item": [
				{
					"name": "Add_Snippets",
					"item": [
						{
							"name": "Sni_Add_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"sniid1\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var sniname = pm.globals.get(\"sniname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.name).to.include(sniname);\r",
											"});\r",
											"\r",
											"var snisub = pm.globals.get(\"snisub1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(snisub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname1}}\",\"subject\":\"{{snisub1}}\",\"description\":\"\",\"tags\":[\"lemon\"],\"archive\":false,\"type\":\"personal\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"sniid2\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var sniname = pm.globals.get(\"sniname2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.name).to.include(sniname);\r",
											"});\r",
											"\r",
											"var snisub = pm.globals.get(\"snisub2\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(snisub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname2}}\",\"subject\":\"{{snisub2}}\",\"description\":\"\",\"tag\":[],\"type\":\"team\",\"tags\":[\"phases\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"sniid3\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var sniname = pm.globals.get(\"sniname3\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.name).to.include(sniname);\r",
											"});\r",
											"\r",
											"var snisub = pm.globals.get(\"snisub3\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(snisub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname3}}\",\"subject\":\"\",\"description\":\"\",\"tag\":[],\"type\":\"personal\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"tempid4\",jsonData.id);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname4}}\",\"subject\":\"\",\"description\":\"\",\"tag\":[],\"type\":\"personal\",\"tags\":[\"domain\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname1}}\",\"subject\":\"{{snisub1}}\",\"description\":\"\",\"tags\":[\"lemon\"],\"archive\":false,\"type\":\"personal\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_06_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"snippet validation failed: name: Path `name` is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"\",\"subject\":\"\",\"description\":\"\",\"tag\":[],\"type\":\"\",\"tags\":[\"\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippet"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Snippets",
					"item": [
						{
							"name": "Sni_Get_All_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var sniid = pm.globals.get(\"sniid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											" pm.expect(pm.response.text()).to.include(sniid);\r",
											"});\r",
											"\r",
											"var sniname = pm.globals.get(\"sniname1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(sniname);\r",
											"});\r",
											"\r",
											"var snisub = pm.globals.get(\"snisub1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(snisub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallsnippets?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallsnippets"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Get_All_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "122143535412425454656534543",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallsnippets?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallsnippets"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Get_All_03_Pagination",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var sniid = pm.globals.get(\"sniid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(sniid);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallsnippets?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallsnippets"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Snippets",
					"item": [
						{
							"name": "Sni_Edit_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname1}}\",\"subject\":\"{{snisub1}}\",\"description\":\"\",\"tags\":[\"lemon\"],\"archive\":false,\"type\":\"personal\",\"id\":\"{{sniid1}}\"}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"editsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1212121212",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname1}}\",\"subject\":\"{{snisub1}}\",\"description\":\"\",\"tags\":[\"lemon\"],\"archive\":false,\"type\":\"personal\",\"id\":\"{{sniid1}}\"}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"editsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID or ID is not provided\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{sniname1}}\",\"subject\":\"{{snisub1}}\",\"description\":\"\",\"tags\":[\"lemon\"],\"archive\":false,\"type\":\"personal\",\"AccountId\":\"61d3f8fbf8a5b7cabe9ff5e1\",\"id\":\"{{sniinvalidid}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"editsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Edit_04_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID or ID is not provided\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{sniid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"editsnippet"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Snippets_Tag",
					"item": [
						{
							"name": "Sni_Add_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{sniid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{sniid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_Mul_Tag_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{snitag3}}\",\"selected\":[\"{{sniid3}}\",\"{{sniid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{snitag1}}\",\"selected\":[\"{{sniinvalidid}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_Tag_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Snippet found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{snitag2}}\",\"selected\":[\"{{sniid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Add_Tag_07_Empty_Tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippettag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Snippets_Tag",
					"item": [
						{
							"name": "Sni_Get_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"tag1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Get_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniinvalidid}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Get_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniinvalidid}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getsnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Get_Tag_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Snippet found with this ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getsnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getsnippettag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Snippets_Tag",
					"item": [
						{
							"name": "Sni_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{sniid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removesnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removesnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Remove_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag2}}\",\"selected\":[\"{{sniid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removesnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removesnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Remove_Mul__Tag_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{snitag3}}\",\"selected\":[\"{{sniid3}}\",\"{{sniid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removesnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removesnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Remove_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{snitag3}}\",\"selected\":[\"{{sniid3}}\",\"{{sniid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removesnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removesnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Remove_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{invalid contact id}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removesnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removesnippettag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Remove_Tag_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Snippet found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag1}}\",\"selected\":[\"{{companyid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removesnippettag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removesnippettag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Snippet",
					"item": [
						{
							"name": "Sni_Archive_01_Archive_Snippet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Snippet(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivesnippetss",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivesnippetss"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Archive_Mul_02_Archive_Snippet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Snippet(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniid1}}\",\"{{sniid3}}\"]\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivesnippetss",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivesnippetss"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Archive_03_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Snippet(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivesnippetss",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivesnippetss"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Archive_04_Already_Mul_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Snippet(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniid1}}\",\"{{sniid3}}\"]\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivesnippetss",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivesnippetss"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1235466262",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivesnippetss",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivesnippetss"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniinvalid}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivesnippetss",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivesnippetss"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Archive_07_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Snippet not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{sniid2}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivesnippetss",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivesnippetss"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Snippets",
					"item": [
						{
							"name": "Sni_Delete__01_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Snippet(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{sniid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletesnippets",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletesnippets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Delete__02_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Snippet(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{sniid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletesnippets",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletesnippets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Delete_Mul_03_Delete_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Snippet(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{sniid3}}\",\"{{sniid4}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletesnippets",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletesnippets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Delete_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "35465465463543654",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{companyid2}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletesnippets",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletesnippets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Delete_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{sniinvalid}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletesnippets",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletesnippets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Delete_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Snippet(s) not exists\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{sniid1}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/deletesnippets",
									"host": [
										"{{url}}"
									],
									"path": [
										"deletesnippets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sni_Delete_07_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var sniid = pm.globals.get(\"sniid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"sniid\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallsnippets?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallsnippets"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "SEQUENCES",
			"item": [
				{
					"name": "Add_Sequences",
					"item": [
						{
							"name": "Sequences_Add_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"Sequencesid1\", jsonData.data);\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Sequence has been created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{seqname}}\",\"isActive\":false,\"sequenceType\":\"personal\",\"stepType\":\"Email\",\"stepKind\":\"Auto\",\"onDay\":1,\"touchType\":\"Reply\",\"emailSub\":\"sequences\",\"emailBody\":\"<p>Seq</p>\",\"emailAttachments\":[]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Add_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"New Sequence\",\"isActive\":false,\"sequenceType\":\"personal\",\"stepType\":\"Email\",\"stepKind\":\"Auto\",\"onDay\":1,\"touchType\":\"Reply\",\"emailSub\":\"sample\",\"emailBody\":\"<p>sample</p>\",\"emailAttachments\":[]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Add_03_Invalid_Step_Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid stepType\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"New Sequence\",\"isActive\":false,\"sequenceType\":\"personal\",\"stepType\":\"instagram\",\"stepKind\":\"Auto\",\"onDay\":1,\"touchType\":\"Reply\",\"emailSub\":\"sample\",\"emailBody\":\"<p>sample</p>\",\"emailAttachments\":[]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Add_04_Empty_Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"stepType is required\");\r",
											"});\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"\",\"isActive\":false,\"stepType\":\"\",\"sequenceType\":\"personal\",\"stepKind\":\"\",\"onDay\":\"\",\"touchType\":\"\",\"emailSub\":\"\",\"emailBody\":\"\",\"emailAttachments\":[]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Add_05_Empty_On_Day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"onDay is required\");\r",
											"});\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"New Sequence\",\"isActive\":false,\"sequenceType\":\"personal\",\"stepType\":\"Email\",\"stepKind\":\"\",\"onDay\":\"\",\"touchType\":\"\",\"emailSub\":\"\",\"emailBody\":\"\",\"emailAttachments\":[]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Add_06_Empty_Email_Sub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"emailSub is required for Email step\");\r",
											"});\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"New Sequence\",\"isActive\":false,\"sequenceType\":\"personal\",\"stepType\":\"Email\",\"stepKind\":\"\",\"onDay\":\"5\",\"touchType\":\"\",\"emailSub\":\"\",\"emailBody\":\"\",\"emailAttachments\":[]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Sequences",
					"item": [
						{
							"name": "Sequences_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var id = pm.globals.get(\"Sequencesid1\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "12123123",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Get_All_03_Pagination",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_steps",
					"item": [
						{
							"name": "Sequences_01_Add_Steps_Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"Stepsid1\", jsonData.data._id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_02_Add_Step_Call_Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"Stepsid2\", jsonData.data._id);\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Step has been added\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"Call Log\",\"description\":\"call\",\"onDay\":3}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_03_Add_Step_Linkedein",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Step has been added\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"LinkedIn\",\"touchType\":\"Message\",\"description\":\"Linkedin\",\"onDay\":\"4\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_04_Add_Step_SMS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Step has been added\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"SMS\",\"stepKind\":\"Auto\",\"description\":\"SMS\",\"onDay\":\"5\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_05_Add_Step_Twitter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Step has been added\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"Twitter\",\"touchType\":\"Follow\",\"description\":\"Twitter\",\"onDay\":7}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_06_Add_Step_Whatspp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Step has been added\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"WhatsApp\",\"description\":\"Whatspp\",\"onDay\":9}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_07_Add_Step_Meeting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Step has been added\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"Meeting\",\"description\":\"Meeting\",\"onDay\":11}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_08_Add_Step_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"stepType is required\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"\",\"description\":\"\",\"onDay\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_09_Add_Step_Empty_Step_Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"stepType is required\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"\",\"description\":\"Meeting\",\"onDay\":3}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_10_Add_Step_Empty_On_Day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"onDay is required\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"Meeting\",\"description\":\"Meeting\",\"onDay\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_11_Add_Step_Invalid_On_Day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"onDay should be in digits\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"Meeting\",\"description\":\"Meeting\",\"onDay\":\"cool\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_12_Add_Step_Empty_Description",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"New Step has been added\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"Meeting\",\"description\":\"\",\"onDay\":2}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_13_Add_Step_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "121212",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"stepType\":\"Meeting\",\"description\":\"Meeting\",\"onDay\":11}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/steps",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"steps"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Step",
					"item": [
						{
							"name": "Sequences_01_Edit_Step_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Step has been updated successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{Stepsid2}}\",\"stepType\":\"Call Log\",\"stepKind\":\"Manual\",\"onDay\":\"4\",\"description\":\"call Edit\",\"touchType\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_02_Edit_Step_Invalid_Onday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"onDay should be in digits\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{Stepsid2}}\",\"stepType\":\"Call Log\",\"stepKind\":\"Manual\",\"onDay\":\"Four\",\"description\":\"call Edit\",\"touchType\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_03_Edit_Step_Empty_Onday",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"onDay should be in digits\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{Stepsid2}}\",\"stepType\":\"Call Log\",\"stepKind\":\"Manual\",\"onDay\":\"\",\"description\":\"call Edit\",\"touchType\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_04_Edit_Step_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"stepType is required\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"\",\"stepType\":\"\",\"stepKind\":\"\",\"onDay\":\"\",\"description\":\"\",\"touchType\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_05_Edit_Step_Wrong_Step_Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"stepType should remain the same\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{Stepsid2}}\",\"stepType\":\"Email\",\"stepKind\":\"Auto\",\"onDay\":1,\"description\":\"\",\"touchType\":\"Reply\",\"emailSub\":\"test\",\"emailAttachments\":[]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_06_Edit_Step_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No step with that id found!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{Stepsid2}}\",\"stepType\":\"Call Log\",\"stepKind\":\"Manual\",\"onDay\":\"4\",\"description\":\"call Edit\",\"touchType\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_07_Edit_Step_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid stepId\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{Stepsid2}}\",\"stepType\":\"Call\",\"stepKind\":\"Manual\",\"onDay\":\"4\",\"description\":\"call Edit\",\"touchType\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_08-Edit_Step_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "12121",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{Stepsid2}}\",\"stepType\":\"Call\",\"stepKind\":\"Manual\",\"onDay\":\"4\",\"description\":\"call Edit\",\"touchType\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Step",
					"item": [
						{
							"name": "Sequences_Delete_01-Step_Happy_path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Step has been deleted successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Delete_02_Step_Happy_path_Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No step with that id found!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Delete_03_Step_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid stepId\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Delete_04_Step_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No step with that id found!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_Delete_05_Step_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/steps/{{Stepsid2}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"steps",
										"{{Stepsid2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Activate",
					"item": [
						{
							"name": "Sequences_01_Activate_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Sequence updated successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/activate",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"activate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_02_Activate_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"You don't have permissions to update this sequence\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/activate",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"activate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_03_Activate_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid sequence id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid}}/activate",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid}}",
										"activate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_04_Activate_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/activate",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"activate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update_Settings",
					"item": [
						{
							"name": "Sequences_01_Update_Settings_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Sequence updated successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"startTime\":\"1715\",\"daysToRun\":[\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"sendLimit\":5,\"enrollmentLimit\":10,\"timezone\":{\"value\":\"America/Tijuana\",\"label\":\"(GMT-8:00) Tijuana\",\"offset\":-8,\"abbrev\":\"PST\",\"altName\":\"Pacific Standard Time\"},\"owner\":\"{{owner1}}\",\"followUpEmail\":false,\"linkToUnsubscribe\":true,\"trackOpens\":true,\"trackLinkClicks\":true,\"stopSending\":\"Replies To Any Email\",\"delayBetween\":3}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_02_Update_Settings_Empty_Days",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid day(s) - []\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"startTime\":\"\",\"daysToRun\":[\"\"],\"sendLimit\":\"\",\"enrollmentLimit\":\"\",\"timezone\":{\"value\":\"America/Tijuana\",\"label\":\"(GMT-8:00) Tijuana\",\"offset\":\"\",\"abbrev\":\"\",\"altName\":\"\"},\"owner\":\"61e7fc3309db1a878f94c3b3\",\"followUpEmail\":\"\",\"linkToUnsubscribe\":\"\",\"trackOpens\":\"\",\"trackLinkClicks\":\"\",\"stopSending\":\"\",\"delayBetween\":\"\"}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_03_Update_Settings_Empty_Timezone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"timezone should be an object\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"startTime\":\"1615\",\"daysToRun\":[\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"sendLimit\":10,\"enrollmentLimit\":10,\"timezone\":null,\"owner\":\"61e7fc3309db1a878f94c3b3\",\"followUpEmail\":false,\"linkToUnsubscribe\":false,\"trackOpens\":true,\"trackLinkClicks\":true,\"stopSending\":\"Replies to this sequence\",\"delayBetween\":1}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_04_Update_Settings_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"startTime\":\"1715\",\"daysToRun\":[\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"sendLimit\":5,\"enrollmentLimit\":10,\"timezone\":{\"value\":\"America/Tijuana\",\"label\":\"(GMT-8:00) Tijuana\",\"offset\":-8,\"abbrev\":\"PST\",\"altName\":\"Pacific Standard Time\"},\"owner\":\"61e7fc3309db1a878f94c3b3\",\"followUpEmail\":false,\"linkToUnsubscribe\":true,\"trackOpens\":true,\"trackLinkClicks\":true,\"stopSending\":\"Replies To Any Email\",\"delayBetween\":3}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_05_Update_Settings_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid sequence id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"startTime\":\"1715\",\"daysToRun\":[\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"sendLimit\":5,\"enrollmentLimit\":10,\"timezone\":{\"value\":\"America/Tijuana\",\"label\":\"(GMT-8:00) Tijuana\",\"offset\":-8,\"abbrev\":\"PST\",\"altName\":\"Pacific Standard Time\"},\"owner\":\"61e7fc3309db1a878f94c3b3\",\"followUpEmail\":false,\"linkToUnsubscribe\":true,\"trackOpens\":true,\"trackLinkClicks\":true,\"stopSending\":\"Replies To Any Email\",\"delayBetween\":3}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_06_Update_Settings_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"You don't have permissions to update this sequence\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"startTime\":\"1715\",\"daysToRun\":[\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\"],\"sendLimit\":5,\"enrollmentLimit\":10,\"timezone\":{\"value\":\"America/Tijuana\",\"label\":\"(GMT-8:00) Tijuana\",\"offset\":-8,\"abbrev\":\"PST\",\"altName\":\"Pacific Standard Time\"},\"owner\":\"{{owner1}}\",\"followUpEmail\":false,\"linkToUnsubscribe\":true,\"trackOpens\":true,\"trackLinkClicks\":true,\"stopSending\":\"Replies To Any Email\",\"delayBetween\":3}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "EDIT_SEQUENCES",
					"item": [
						{
							"name": "Sequences_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Sequence updated successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"samples\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/name",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"name"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_02_Edit_Invalid_AccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "112233",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"samples\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/name",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"name"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_03_Edit_Empty_Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/name",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"name"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Settings",
					"item": [
						{
							"name": "Sequences_01_Settings_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_02_Settings_MissMatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No sequence with that id found!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_03_Settings_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid sequence id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid}}",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sequences_04_Settings_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "12123",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/sequences/{{Sequencesid1}}/settings",
									"host": [
										"{{url}}"
									],
									"path": [
										"sequences",
										"{{Sequencesid1}}",
										"settings"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "NOTES",
			"item": [
				{
					"name": "Create_Note",
					"item": [
						{
							"name": "Note_Create_01_Contact_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Note Created\");\r",
											"});\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"noteid1\", jsonData.newNote._id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_02_Contact_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Note cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_03_Contact_Empty_Field_Enter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Notes validation failed: notes: Path `notes` is required\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\" \"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_04_Contact_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_05_Contact_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{invalid contact id}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_06_Contact_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid2}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_07_Account_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Note Created\");\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"noteid2\", jsonData.newNote._id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_08_Account_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Note cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_09_Account_Empty_Field_Enter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Notes validation failed: notes: Path `notes` is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\" \"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_10_Account_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid1}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_11_Account_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{invalid contact id}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Create_12_Account_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{companyid2}}\",\"notes\":\"{{notes}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/createnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"createnote"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Note",
					"item": [
						{
							"name": "Note_Edit_01_Contact_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Updated\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\"{{notes}}\",\"id\":\"{{noteid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_02_Contact_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Note cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\"\",\"id\":\"{{noteid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_03_Contact_Empty_Field_Enter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Please provide note id\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\" \",\"id\":\"{{noteid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_04_Contact_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\"{{editnotes}}\",\"id\":\"{{noteid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_05_Contact_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID or ID is not provided\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid1}}\",\"notes\":\"{{notes}}\",\"id\":\"11\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_06_Contact_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"contact\":\"{{contactid2}}\",\"notes\":\"{{notes}}\",\"id\":\"{{noteid1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_07_Account_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Updated\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":\"{{companyid1}}\",\"notes\":\"{{editnotes}}\",\"isEdited\":true,\"id\":\"{{noteid2}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_08_Account_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Note cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\"\",\"id\":\"{{noteid2}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_09_Account_Empty_Field_Enter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Validation failed: notes: Path `notes` is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\" \",\"id\":\"{{noteid2}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_10_Account_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\"\",\"id\":\"{{noteid2}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_11_Account_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID or ID is not provided\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\"\",\"id\":\"1122\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note_Edit_12_Account_Missmatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Note cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Global_Token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"company\":\"{{companyid2}}\",\"notes\":\"\",\"id\":\"{{noteid2}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/editnote",
									"host": [
										"{{url}}"
									],
									"path": [
										"editnote"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}