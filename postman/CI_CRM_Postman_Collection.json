{
	"info": {
		"_postman_id": "e1244121-9940-42e0-be2f-d5fdb5fba809",
		"name": "Sales_Updated_Routes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18983171"
	},
	"item": [
		{
			"name": "Account",
			"item": [
				{
					"name": "Add_Account",
					"item": [
						{
							"name": "Acc_Add_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_01\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('acc1{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_01}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_02\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_02\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_02\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_02\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_02\");\r",
											"var Repositoryname =pm.variables.replaceIn('acc2{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_02\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_02}}\",\"companyPhone\":\"{{account_Phone_Number_02}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_02}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_02}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Company added with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "12121",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_01}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_06_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"`website` is required.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\"569\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"\",\"companyPhone\":\"\",\"address\":\"\",\"city\":\"\",\"country\":\"\",\"state\":\"\",\"code\":\"\",\"companyLinkedin\":\"\",\"companyFacebook\":\"\",\"twitter\":\"\",\"website\":\"\",\"industry\":\"\",\"about\":\"\",\"numOfEmps\":\"\",\"filePath\":\"\",\"owner\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_03\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_03\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_03\");\r",
											"var Repositoryname =pm.variables.replaceIn('acc3{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_03\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_03}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_04\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_04\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_04\");\r",
											"var Repositoryname =pm.variables.replaceIn('acc4{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_04\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_04}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Account/:Id",
					"item": [
						{
							"name": "Acc_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_01\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('accgetid{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_01}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/company/{{account_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"{{account_Id_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Get company with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/company/{{account_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"{{account_Id_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Get company with invalid contact id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/company/12121",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"12121"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_04_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Get company with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Company Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/company/{{account_Id_02}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"{{account_Id_02}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Account",
					"item": [
						{
							"name": "Acc_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_01\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('getall{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_01}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_All_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/company?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_All_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Get company Invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/company?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Account_Tag",
					"item": [
						{
							"name": "Acc_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_01\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('acctag{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_01}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for account successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{account_Tag}}\",\"selected\":[\"{{account_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_02\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_02\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_02\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_02\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_02\");\r",
											"var Repositoryname =pm.variables.replaceIn('acctag2{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_02\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_02}}\",\"companyPhone\":\"{{account_Phone_Number_02}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_02}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_02}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for account successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{account_Tag}}\",\"selected\":[\"{{account_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Mul_Tag_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for multiple account successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{account_Tag}}\",\"selected\":[\"{{account_Id_03}}\",\"{{account_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Add a tag for account with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag}}\",\"selected\":[\"{{account_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Add a tag for account with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag}}\",\"selected\":[\"123123\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for account with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Account found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag}}\",\"selected\":[\"{{account_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Add_Tag_07_Empty_Tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for account with empty data\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"\",\"selected\":[\"{{account_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Account_Tag",
					"item": [
						{
							"name": "Acc_Get_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"account_Tag\");\r",
											"pm.test(\"Get account tag successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{account_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var tag = pm.globals.get(\"account_Tag\");\r",
											"pm.test(\"Get account tag successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{account_Id_02}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Get account tag with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{account_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Get account tag with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{123123}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Get account tag with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Tags Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{account_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Account_Tag",
					"item": [
						{
							"name": "Acc_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove tag successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag}}\",\"selected\":[\"{{account_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Mul_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove multiple tag sucessfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{account_Tag}}\",\"selected\":[\"{{account_Id_03}}\",\"{{account_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove tag with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag}}\",\"selected\":[\"{{account_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Remove tag with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag}}\",\"selected\":[\"12121\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Remove_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove tag with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Account found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{tag}}\",\"selected\":[\"{{account_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Get_Tag_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"account_Tag\");\r",
											"pm.test(\"Get tag\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{account_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"tag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Company",
					"item": [
						{
							"name": "Comp_Archive_01_Archive_Company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive company successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Company(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{account_Id_01}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_Mul_02_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive multiple company successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Company(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{account_Id_03}}\",\"archive\":false},{\"_id\":\"{{account_Id_04}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_03_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Archiving the already archived account\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Company(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{account_Id_01}}\",\"archive\":true}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_Mul_04_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Multiple archiving the already archived multiple account\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Company(s) Unarchived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{account_Id_03}}\",\"archive\":true},{\"_id\":\"{{account_Id_04}}\",\"archive\":true}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive company with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1235466262",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{account_Id_01}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Archive company with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Company(s) to Archive\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{user_Id_01}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Archive_07_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive company with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{account_Id_01}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Company",
					"item": [
						{
							"name": "Comp_Delete__01_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete company successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{account_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_Mul_02_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete multiple company successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{account_Id_03}}\",\"{{account_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete company with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "35465465463543654",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{account_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete company with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Account(s) to Delete\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"12584\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete company with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Company Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{account_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Comp_Delete_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var conid = pm.globals.get(\"account_Id_01\");\r",
											"pm.test(\"Get company\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"conid\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/company?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Account Copy",
					"item": [
						{
							"name": "Acc_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_01\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('acc1{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_01}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Edit_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Ename\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Ephonenumber\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Eweb\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Eaddress\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_Ecity\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Ecountry\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_Estate\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Ecode\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Elinkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Efacebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Etwitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Eindustry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_Eabout\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_Eno_Of_Emps\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Eweb\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Eweb\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{account_Id_01}}\",\"fullName\":\"{{account_Ename}}\",\"companyPhone\":\"{{account_Ephonenumber}}\",\"address\":\"{{account_Eaddress}}\",\"city\":\"{{account_Ecity}}\",\"country\":\"{{account_Ecountry}}\",\"state\":\"{{account_Estate}}\",\"code\":\"{{account_Ecode}}\",\"companyLinkedin\":\"{{account_Elinkedin}}\",\"companyFacebook\":\"{{account_Efacebook}}\",\"twitter\":\"{{account_Etwitter}}\",\"website\":\"{{account_Eweb}}\",\"industry\":\"{{account_Eindustry}}\",\"about\":\"{{account_Eabout}}\",\"numOfEmps\":\"{{account_Eno_Of_Emps}}\",\"filePath\":\"\",\"archive\":false,\"tags\":[],\"contacts\":[],\"AccountId\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/{{account_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"{{account_Id_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Edit company with invalid access Token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Eweb\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Eweb\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1212121212",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{account_Id_01}}\",\"fullName\":\"{{account_Ename}}\",\"companyPhone\":\"{{account_Ephonenumber}}\",\"address\":\"{{account_Eaddress}}\",\"city\":\"{{account_Ecity}}\",\"country\":\"{{account_Ecountry}}\",\"state\":\"{{account_Estate}}\",\"code\":\"{{account_Ecode}}\",\"companyLinkedin\":\"{{account_Elinkedin}}\",\"companyFacebook\":\"{{account_Efacebook}}\",\"twitter\":\"{{account_Etwitter}}\",\"website\":\"{{account_Eweb}}\",\"industry\":\"{{account_Eindustry}}\",\"about\":\"{{account_Eabout}}\",\"numOfEmps\":\"{{account_Eno_Of_Emps}}\",\"filePath\":\"\",\"archive\":false,\"tags\":[],\"contacts\":[],\"AccountId\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/{{account_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"{{account_Id_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Edit company with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Eweb\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Eweb\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"11223\",\"fullName\":\"{{account_Ename}}\",\"companyPhone\":\"{{account_Ephonenumber}}\",\"address\":\"{{account_Eaddress}}\",\"city\":\"{{account_Ecity}}\",\"country\":\"{{account_Ecountry}}\",\"state\":\"{{account_Estate}}\",\"code\":\"{{account_Ecode}}\",\"companyLinkedin\":\"{{account_Elinkedin}}\",\"companyFacebook\":\"{{account_Efacebook}}\",\"twitter\":\"{{account_Etwitter}}\",\"website\":\"{{account_Eweb}}\",\"industry\":\"{{account_Eindustry}}\",\"about\":\"{{account_Eabout}}\",\"numOfEmps\":\"{{account_Eno_Of_Emps}}\",\"filePath\":\"\",\"archive\":false,\"tags\":[],\"contacts\":[],\"AccountId\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/1212",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"1212"
									]
								}
							},
							"response": []
						},
						{
							"name": "Acc_Edit_04_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Edit company with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Company Not Found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Eweb\");\r",
											"var Repositoryname =pm.variables.replaceIn('{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Eweb\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{account_Id_01}}\",\"fullName\":\"{{account_Ename}}\",\"companyPhone\":\"{{account_Ephonenumber}}\",\"address\":\"{{account_Eaddress}}\",\"city\":\"{{account_Ecity}}\",\"country\":\"{{account_Ecountry}}\",\"state\":\"{{account_Estate}}\",\"code\":\"{{account_Ecode}}\",\"companyLinkedin\":\"{{account_Elinkedin}}\",\"companyFacebook\":\"{{account_Efacebook}}\",\"twitter\":\"{{account_Etwitter}}\",\"website\":\"{{account_Eweb}}\",\"industry\":\"{{account_Eindustry}}\",\"about\":\"{{account_Eabout}}\",\"numOfEmps\":\"{{account_Eno_Of_Emps}}\",\"filePath\":\"\",\"archive\":false,\"tags\":[],\"contacts\":[],\"AccountId\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company/{{account_Id_02}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company",
										"{{account_Id_02}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Templates",
			"item": [
				{
					"name": "Add_Template",
					"item": [
						{
							"name": "Sni_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"snippet_Id_01\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var sniname = pm.globals.get(\"snippets_Name_01\");\r",
											"pm.test(\"Add snippet\", function () {\r",
											"    pm.expect(jsonData.name).to.include(sniname);\r",
											"});\r",
											"\r",
											"var snisub = pm.globals.get(\"snippets_Description_01\");\r",
											"pm.test(\"Add snippet\", function () {\r",
											"    pm.expect(jsonData.description).to.include(snisub);\r",
											"});\r",
											"\r",
											"var snisub = pm.globals.get(\"snippets_Tag_01\");\r",
											"pm.test(\"Add snippet\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(snisub);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{snippets_Name_01}}\",\"subject\":\"\",\"description\":\"{{snippets_Description_01}}\",\"tag\":[],\"type\":\"{{snippets_Type}}\",\"tags\":[\"{{snippets_Tag_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addsnippet",
									"host": [
										"{{url}}"
									],
									"path": [
										"addsnippet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"template_Id_01\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"template_Name_01\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Description\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.description).to.include(temsub);\r",
											"});\r",
											"var temsub = pm.globals.get(\"template_Tag\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_01}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"template_Id_02\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"template_Name_02\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Description\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.description).to.include(temsub);\r",
											"});\r",
											"var temsub = pm.globals.get(\"template_Tag\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_02}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"template_Id_03\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"template_Name_03\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Description\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.description).to.include(temsub);\r",
											"});\r",
											"var temsub = pm.globals.get(\"template_Tag\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_03}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"template_Id_04\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"template_Name_04\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Description\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.description).to.include(temsub);\r",
											"});\r",
											"var temsub = pm.globals.get(\"template_Tag\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_04}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Added a template with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_03}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}"
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_06_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Added a template with empty data\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Empty data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"\",\"subject\":\"\",\"description\":\"\",\"tags\":[\"\"],\"type\":\"personal\",\"snippet\":\"\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Templates",
					"item": [
						{
							"name": "Tem_Get_All_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var tempid = pm.globals.get(\"template_Id_01\");\r",
											"pm.test(\"Get template\", function () {\r",
											" pm.expect(pm.response.text()).to.include(tempid);\r",
											"});\r",
											"\r",
											"var temname = pm.globals.get(\"template_Name_01\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(temsub);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/template?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_All_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get template with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "122143535412425454656534543",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/getallcompanies?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"getallcompanies"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Template_Tag",
					"item": [
						{
							"name": "Tem_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"template_Id_01\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"template_Name_01\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Description\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.description).to.include(temsub);\r",
											"});\r",
											"var temsub = pm.globals.get(\"template_Tag\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_01}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"template_Id_02\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"template_Name_02\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Description\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.description).to.include(temsub);\r",
											"});\r",
											"var temsub = pm.globals.get(\"template_Tag\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_02}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Mul_Tag_03_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for multiple template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_03}}\",\"{{template_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_04_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_05_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"12121\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_06_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Template found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Add_Tag_07_Empty_Tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Add a tag with empty data\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"\",\"selected\":[\"{{template_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Template_Tag",
					"item": [
						{
							"name": "Tem_Get_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"template_Tags\");\r",
											"pm.test(\"Get template tag\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{template_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Get template tag with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{template_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Get template tag with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"12121\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_Tag_04_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Get template tag for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Template with the ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{template_Id_02}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Template_Tag",
					"item": [
						{
							"name": "Tem_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Remove template tag\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Mul_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove tag for multiple template \", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_03}}\",\"{{template_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove template tag with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_03}}\",\"{{template_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove template tag with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"12121\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Remove_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Remove template tag for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Template found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{template_Tags}}\",\"selected\":[\"{{template_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/tag",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"tag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Template",
					"item": [
						{
							"name": "Tem_Archive_01_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Archive template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Templates(s) Archived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{template_Id_01}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_Mul_02_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Archive multiple template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Templates(s) Archived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{template_Id_03}}\",\"archive\":false},{\"_id\":\"{{template_Id_04}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_03_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Archiving already archived template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Templates(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{template_Id_01}}\",\"archive\":true}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_Mul_04_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Archiving already archived multiple template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Templates(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{template_Id_03}}\",\"archive\":true},{\"_id\":\"{{template_Id_04}}\",\"archive\":true}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive template with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1235466262",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{template_Id_01}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive template with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"11223\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Archive_07_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive template for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Records to Archive\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{template_Id_02}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Templates",
					"item": [
						{
							"name": "Tem_Edit_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Edit template\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{template_Id_01}}\",\"name\":\"{{template_Ename}}\",\"subject\":\"{{template_Esubject}}\",\"description\":\"{{template_Edescription}}\",\"tags\":[\"{{template_Etag}}\"],\"trackViews\":true,\"type\":\"personal\",\"archive\":false}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Edit template with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1212121212",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{template_Id_01}}\",\"name\":\"{{template_Ename}}\",\"subject\":\"{{template_Esubject}}\",\"description\":\"{{template_Edescription}}\",\"tags\":[\"{{template_Etag}}\"],\"trackViews\":true,\"type\":\"personal\",\"archive\":false}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Edit template with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID or ID is not provided\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"12121\",\"name\":\"{{template_Ename}}\",\"subject\":\"{{template_Esubject}}\",\"description\":\"{{template_Edescription}}\",\"tags\":[\"{{template_Etag}}\"],\"trackViews\":true,\"type\":\"personal\",\"archive\":false}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Edit_04_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Edit template for miss match id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Template found for the ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{template_Id_02}}\",\"name\":\"{{template_Ename}}\",\"subject\":\"{{template_Esubject}}\",\"description\":\"{{template_Edescription}}\",\"tags\":[\"{{template_Etag}}\"],\"trackViews\":true,\"type\":\"personal\",\"archive\":false}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Template",
					"item": [
						{
							"name": "Tem_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"template_Id_01\",jsonData.id);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var temname = pm.globals.get(\"template_Name_01\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.name).to.include(temname);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Subject\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.subject).to.include(temsub);\r",
											"});\r",
											"\r",
											"var temsub = pm.globals.get(\"template_Description\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.description).to.include(temsub);\r",
											"});\r",
											"var temsub = pm.globals.get(\"template_Tag\");\r",
											"pm.test(\"Added a template successfully\", function () {\r",
											"    pm.expect(jsonData.tags).to.include(temsub);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"{{template_Name_01}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Delete__01_Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Delete template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Template(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{template_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Delete_Mul_02_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete multiple template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Template(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{template_Id_03}}\",\"{{template_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_Delete_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete template with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "35465465463543654",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{template_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_Delete_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete template with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"12121\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_Delete_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete template for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Templates(s) not exists\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{template_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Upload_Template",
					"item": [
						{
							"name": "Temp_upload_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Upload template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"true\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"name\":\"{{template_Name_01}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true},{\"name\":\"{{template_Name_02}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}]\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/uploadcsv",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"uploadcsv"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tem_Get_All_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"var temname = pm.globals.get(\"template_Name_01\");\r",
											"pm.test(\"Get template\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(temname);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/template",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_upload_02_Empty_Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Upload template with empty data\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Type required\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"name\":\"\",\"subject\":\"\",\"description\":\"\",\"type\":\"\",\"tags\":\"\"},{\"name\":\"\",\"subject\":\"\",\"description\":\"\",\"type\":\"\",\"tags\":\"\"}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/uploadcsv",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"uploadcsv"
									]
								}
							},
							"response": []
						},
						{
							"name": "Temp_upload_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Upload template with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"name\":\"{{template_Name_01}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true},{\"name\":\"{{template_Name_02}}\",\"subject\":\"{{template_Subject}}\",\"description\":\"{{template_Description}}\",\"tags\":[\"{{template_Tag}}\"],\"type\":\"{{template_Type}}\",\"snippet\":\"{{snippet_Id_01}}\",\"trackViews\":true,\"trackClicks\":true}]\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/template/uploadcsv",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"template",
										"uploadcsv"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Contact",
			"item": [
				{
					"name": "Add_Contact",
					"item": [
						{
							"name": "Acc_Add_01_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"account_Id_01\",jsonData.id);\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"var compname = pm.globals.get(\"account_Name_01\");\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.expect(jsonData.fullName).to.include(compname);\r",
											"});\r",
											"\r",
											"var compphno = pm.globals.get(\"account_Phone_Number_01\");\r",
											"pm.test(\"Account phone number\", function () {\r",
											"    pm.expect(jsonData.companyPhone).to.include(compphno);\r",
											"});\r",
											"\r",
											"var compweb = pm.globals.get(\"account_Web_01\");\r",
											"pm.test(\"Account website\", function () {\r",
											"    pm.expect(jsonData.website).to.include(compweb);\r",
											"});\r",
											"\r",
											"var compaddress = pm.globals.get(\"account_Address\");\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.expect(jsonData.address).to.include(compaddress);\r",
											"});\r",
											"\r",
											"var compcity = pm.globals.get(\"account_City\");\r",
											"pm.test(\"Account City\", function () {\r",
											"    pm.expect(jsonData.city).to.include(compcity);\r",
											"});\r",
											"\r",
											"var compcountry = pm.globals.get(\"account_Country\");\r",
											"pm.test(\"Account country\", function () {\r",
											"    pm.expect(jsonData.country).to.include(compcountry);\r",
											"});\r",
											"\r",
											"var compstate = pm.globals.get(\"account_State\");\r",
											"pm.test(\"Account state\", function () {\r",
											"    pm.expect(jsonData.state).to.include(compstate);\r",
											"});\r",
											"\r",
											"var compcode = pm.globals.get(\"account_Code\");\r",
											"pm.test(\"Account code\", function () {\r",
											"    pm.expect(jsonData.code).to.include(compcode);\r",
											"});\r",
											"var compLinked = pm.globals.get(\"account_Linkedin\");\r",
											"pm.test(\"Account linkedin\", function () {\r",
											"    pm.expect(jsonData.companyLinkedin).to.include(compLinked);\r",
											"});\r",
											"\r",
											"var compfacebook = pm.globals.get(\"account_Facebook\");\r",
											"pm.test(\"Account facebook\", function () {\r",
											"    pm.expect(jsonData.companyFacebook).to.include(compfacebook);\r",
											"});\r",
											"\r",
											"var comptwitter= pm.globals.get(\"account_Twitter\");\r",
											"pm.test(\"Account twitter\", function () {\r",
											"    pm.expect(jsonData.twitter).to.include(comptwitter);\r",
											"});\r",
											"\r",
											"var compindustry = pm.globals.get(\"account_Industry\");\r",
											"pm.test(\"Account industry\", function () {\r",
											"    pm.expect(jsonData.industry).to.include(compindustry);\r",
											"});\r",
											"\r",
											"var compabout = pm.globals.get(\"account_About\");\r",
											"pm.test(\"Account about\", function () {\r",
											"    pm.expect(jsonData.about).to.include(compabout);\r",
											"});\r",
											"\r",
											"var compnumOfEmps = pm.globals.get(\"account_No_Of_Employee\");\r",
											"pm.test(\"Account no of employee\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(compnumOfEmps);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');-\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"account_Web_01\");\r",
											"var Repositoryname =pm.variables.replaceIn('con{{currentdate}}')+\".com\";\r",
											"pm.globals.set(\"account_Web_01\",Repositoryname);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fullName\":\"{{account_Name_01}}\",\"companyPhone\":\"{{account_Phone_Number_01}}\",\"address\":\"{{account_Address}}\",\"city\":\"{{account_City}}\",\"country\":\"{{account_Country}}\",\"state\":\"{{account_State}}\",\"code\":\"{{account_Code}}\",\"companyLinkedin\":\"{{account_Linkedin}}\",\"companyFacebook\":\"{{account_Facebook}}\",\"twitter\":\"{{account_Twitter}}\",\"website\":\"{{account_Web_01}}\",\"industry\":\"{{account_Industry}}\",\"about\":\"{{account_About}}\",\"numOfEmps\":\"{{account_No_Of_Employee}}\",\"filePath\":\"\",\"owner\":\"{{user_Id_01}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/company",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_01_Happy_Path",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"contact_First_Name_01\");\r",
											"var repositoryName ='tom'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_First_Name_01\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"contact_Last_Name_01\");\r",
											"var repositoryname =\"jerry\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_Last_Name_01\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"contact_Email_01\");\r",
											"var repositoryy =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"contact_Email_01\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact created successfully\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{contact_First_Name_01}}\",\"lName\":\"{{contact_Last_Name_01}}\",\"company\":\"{{account_Id_01}}\",\"owner\":\"{{user_Id_01}}\",\"email\":\"{{contact_Email_01}}\",\"emailType\":\"\",\"title\":\"{{contact_Title}}\",\"phone\":\"{{contact_Phone}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"{{contact_Stage}}\",\"street\":\"{{contact_Street}}\",\"city\":\"{{contact_City}}\",\"state\":\"{{contact_State}}\",\"country\":\"{{contact_Country}}\",\"code\":\"{{contact_Code}}\",\"linkedin\":\"{{contact_Linkedin}}\",\"facebook\":\"{{contact_Facebook}}\",\"timezone\":\"{{contact_Timezone}}\",\"tags\":[\"{{contact_Tag}}\"],\"type\":\"{{contact_Type}}\",\"twitter\":\"{{contact_Twitter}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact created successfully\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"contact_First_Name_02\");\r",
											"var repositoryName ='tom'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_First_Name_02\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"contact_Last_Name_02\");\r",
											"var repositoryname =\"jerry\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"Contact_Last_Name_02\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"contact_Email_02\");\r",
											"var repositoryy =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"contact_Email_02\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{contact_First_Name_02}}\",\"lName\":\"{{contact_Last_Name_02}}\",\"company\":\"{{account_Id_01}}\",\"owner\":\"{{user_Id_02}}\",\"email\":\"{{contact_Email_02}}\",\"emailType\":\"\",\"title\":\"{{contact_Title}}\",\"phone\":\"{{contact_Phone}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"{{contact_Stage}}\",\"street\":\"{{contact_Street}}\",\"city\":\"{{contact_City}}\",\"state\":\"{{contact_State}}\",\"country\":\"{{contact_Country}}\",\"code\":\"{{contact_Code}}\",\"linkedin\":\"{{contact_Linkedin}}\",\"facebook\":\"{{contact_Facebook}}\",\"timezone\":\"{{contact_Timezone}}\",\"tags\":[\"{{contact_Tag}}\"],\"type\":\"{{contact_Type}}\",\"twitter\":\"{{contact_Twitter}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_03_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact created successfully\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"contact_First_Name_03\");\r",
											"var repositoryName ='tom'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_First_Name_03\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"contact_Last_Name_03\");\r",
											"var repositoryname =\"jerry\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_Last_Name_03\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"contact_Email_03\");\r",
											"var repositoryy =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"contact_Email_03\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{contact_First_Name_03}}\",\"lName\":\"{{contact_Last_Name_03}}\",\"company\":\"{{account_Id_01}}\",\"owner\":\"{{user_Id_01}}\",\"email\":\"{{contact_Email_03}}\",\"emailType\":\"\",\"title\":\"{{contact_Title}}\",\"phone\":\"{{contact_Phone}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"{{contact_Stage}}\",\"street\":\"{{contact_Street}}\",\"city\":\"{{contact_City}}\",\"state\":\"{{contact_State}}\",\"country\":\"{{contact_Country}}\",\"code\":\"{{contact_Code}}\",\"linkedin\":\"{{contact_Linkedin}}\",\"facebook\":\"{{contact_Facebook}}\",\"timezone\":\"{{contact_Timezone}}\",\"tags\":[\"{{contact_Tag}}\"],\"type\":\"{{contact_Type}}\",\"twitter\":\"{{contact_Twitter}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_04_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact created successfully\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"contact_First_Name_04\");\r",
											"var repositoryName ='tom'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_First_Name_04\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"contact_Last_Name_04\");\r",
											"var repositoryname =\"jerry\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"Contact_Last_Name_04\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"contact_Email_04\");\r",
											"var repositoryy =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"contact_Email_04\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{contact_First_Name_04}}\",\"lName\":\"{{contact_Last_Name_04}}\",\"company\":\"{{account_Id_01}}\",\"owner\":\"{{user_Id_01}}\",\"email\":\"{{contact_Email_04}}\",\"emailType\":\"\",\"title\":\"{{contact_Title}}\",\"phone\":\"{{contact_Phone}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"{{contact_Stage}}\",\"street\":\"{{contact_Street}}\",\"city\":\"{{contact_City}}\",\"state\":\"{{contact_State}}\",\"country\":\"{{contact_Country}}\",\"code\":\"{{contact_Code}}\",\"linkedin\":\"{{contact_Linkedin}}\",\"facebook\":\"{{contact_Facebook}}\",\"timezone\":\"{{contact_Timezone}}\",\"tags\":[\"{{contact_Tag}}\"],\"type\":\"{{contact_Type}}\",\"twitter\":\"{{contact_Twitter}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"{{contact_First_Name_01}}\",\"lName\":\"{{contact_Last_Name_01}}\",\"company\":\"{{account_Id_01}}\",\"owner\":\"{{user_Id_01}}\",\"email\":\"{{contact_Email_01}}\",\"emailType\":\"\",\"title\":\"{{contact_Title}}\",\"phone\":\"{{contact_Phone}}\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"{{contact_Stage}}\",\"street\":\"{{contact_Street}}\",\"city\":\"{{contact_City}}\",\"state\":\"{{contact_State}}\",\"country\":\"{{contact_Country}}\",\"code\":\"{{contact_Code}}\",\"linkedin\":\"{{contact_Linkedin}}\",\"facebook\":\"{{contact_Facebook}}\",\"timezone\":\"{{contact_Timezone}}\",\"tags\":[\"{{contact_Tag}}\"],\"type\":\"{{contact_Type}}\",\"twitter\":\"{{contact_Twitter}}\"}"
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_06_Empty_Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Add contact with empty field\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Email is required\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"fName\":\"\",\"lName\":\"\",\"company\":\"\",\"owner\":\"\",\"email\":\"\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"timezone\":\"\",\"tags\":[\"\"],\"type\":\"\",\"twitter\":\"\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_All_Contact",
					"item": [
						{
							"name": "Con_Get_All_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contact_Id_01\");\r",
											"\r",
											"var fName1 = pm.globals.get(\"contact_First_Name_01\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.contacts.results, c => c.fName === fName1),\r",
											"  item => { userIds.push(item._id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contact_Id_01\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_02_Happy_Path Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contact_Id_02\");\r",
											"\r",
											"var fName2 = pm.globals.get(\"contact_First_Name_02\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.contacts.results, c => c.fName === fName2),\r",
											"  item => { userIds.push(item._id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contact_Id_02\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_03_Happy_Path Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contact_Id_03\");\r",
											"\r",
											"var fName3 = pm.globals.get(\"contact_First_Name_03\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.contacts.results, c => c.fName === fName3),\r",
											"  item => { userIds.push(item._id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contact_Id_03\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_04_Happy_Path Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.globals.get(\"contact_Id_04\");\r",
											"\r",
											"var fName3 = pm.globals.get(\"contact_First_Name_04\");\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const userIds = [];\r",
											"_.forEach(_.filter(jsonData.contacts.results, c => c.fName === fName3),\r",
											"  item => { userIds.push(item._id); });\r",
											"console.log(userIds);\r",
											"pm.globals.set(\"contact_Id_04\", userIds);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_All_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Add contact with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "122143535412425454656534543",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Contact/:Id",
					"item": [
						{
							"name": "Con_Get_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var fName = pm.globals.get(\"contact_First_Name_01\");\r",
											"pm.test(\"Get contact\", function () {\r",
											"    pm.expect(jsonData[0].fName).to.include(fName);\r",
											"});\r",
											"\r",
											"var lName = pm.globals.get(\"contact_Last_Name_01\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].lName).to.include(lName);\r",
											"});\r",
											"\r",
											"var email = pm.globals.get(\"contact_Email_01\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(jsonData[0].email).to.include(email);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact/{{contact_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact",
										"{{contact_Id_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Get contact with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MWQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact/{{contact_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact",
										"{{contact_Id_01}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Get contact with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact/1212",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact",
										"1212"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_04_Mismatch_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Get contact for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact/{{contact_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact",
										"{{contact_Id_01}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Archive_Contact",
					"item": [
						{
							"name": "Con_Archive_01_Archive_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Contacts(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{contact_Id_01}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_02_Archive_Mul_Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Contacts(s) Archived\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{contact_Id_03}}\",\"archive\":false},{\"_id\":\"{{contact_Id_04}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_03_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Archive contact which is already archived\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"1 Contacts(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{contact_Id_01}}\",\"archive\":true}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_Mul_Tag_04_Already_Archived",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Archive multiple contact which is already archived\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2 Contacts(s) Unarchived \");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{contact_Id_03}}\",\"archive\":true},{\"_id\":\"{{contact_Id_04}}\",\"archive\":true}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_05_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Archive contact with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1235466262",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contactid1}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_06_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive contact with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"68986464644641654165\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Archive_07_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Archive contact with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No  Contact(s) to Archive\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\"_id\":\"{{contact_Id_02}}\",\"archive\":false}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/archivecontact",
									"host": [
										"{{url}}"
									],
									"path": [
										"archivecontact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Add_Contact_Tag",
					"item": [
						{
							"name": "Con_Add_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact tag successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_01}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact tag successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_02}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact tag with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_01}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Add contact tag with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"159687\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Add contact tag for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Contact(s)  found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_02}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_06_Empty_Tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Add contact tag with empty tag\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag cannot be empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"\",\"selected\":[\"{{contact_Id_01}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Mul_Tag_07_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Add contact tag with multiple tag\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Created\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_03}}\",\"{{contact_Id_04}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/addcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"addcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Add_Tag_08_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var tag = pm.globals.get(\"contact_Tag\");\r",
											"\r",
											"pm.test(\"Get contact tag\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"tag\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontact/{{contact_Id_01}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontact",
										"{{contact_Id_01}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get_Contact_Tag",
					"item": [
						{
							"name": "Con_Get_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"var tag = pm.globals.get(\"contact_Tag\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contact_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var tag = pm.globals.get(\"contact_Tag\");\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(tag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contact_Id_02}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "23235423523",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contact_Id_01}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"123456\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Get_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Tags Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{contact_Id_02}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/getcontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"getcontacttag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove_Contact_Tag",
					"item": [
						{
							"name": "Con_Remove_Tag_01_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Remove contact tag successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_01}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Mul_Tag_02_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Remove contact tag for multiple tags successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Tag(s) Removed\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_03}}\",\"{{contact_Id_04}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Tag_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove contact tag with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "123123123",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_03}}\",\"{{contact_Id_04}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Tag_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Remove contact tag with invalid\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"123456\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Remove_Tag_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Remove contact tag with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Contact found with selected ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"tag\":\"{{contact_Tag}}\",\"selected\":[\"{{contact_Id_02}}\"]}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/removecontacttag",
									"host": [
										"{{url}}"
									],
									"path": [
										"removecontacttag"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit_Contact",
					"item": [
						{
							"name": "Con_Edit_01_Edit_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Edit contact successfully\", function () {\r",
											"    pm.response.to.have.status(\"Ok\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set('currentdate', moment().format((\"YYYYMMDDHHMMSS\")));\r",
											"\r",
											"pm.globals.get(\"contact_Efirst_Name_01\");\r",
											"var repositoryName ='tom'+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_First_Name_01\",repositoryName);\r",
											"\r",
											"pm.globals.get(\"contact_Elast_Name_01\");\r",
											"var repositoryname =\"jerry\"+ pm.variables.replaceIn('{{currentdate}}');\r",
											"pm.globals.set(\"contact_Last_Name_01\",repositoryname);\r",
											"\r",
											"pm.globals.get(\"contact_Eemail_01\");\r",
											"var repositoryy =\"jerry\"+ pm.variables.replaceIn('{{$randomEmail}}');\r",
											"pm.globals.set(\"contact_Email_01\",repositoryy);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{contact_Id_01}}\",\"fName\":\"{{contact_Efirst_Name_01}}\",\"lName\":\"{{contact_Elast_Name_01}}\",\"company\":null,\"email\":\"{{contact_Email_01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"New\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"type\":\"\",\"tags\":[\"tag\",\"hai\"],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"views\":0,\"clicks\":0,\"totalEmailSent\":0,\"isUnsubscribed\":false,\"AccountId\":\"{{account_Id_01}}\",\"fName_fuzzy\":[],\"lName_fuzzy\":[],\"notes\":[],\"createdAt\":\"\",\"updatedAt\":\"\",\"__v\":0}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Edit_02_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "1212121212",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{contact_Id_01}}\",\"fName\":\"{{contact_Efirst_Name_01}}\",\"lName\":\"{{contact_LElast_Name_01}}\",\"company\":null,\"email\":\"{{contact_Eemail_01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"New\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"type\":\"\",\"tags\":[\"tag\",\"hai\"],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"views\":0,\"clicks\":0,\"totalEmailSent\":0,\"isUnsubscribed\":false,\"AccountId\":\"{{account_Id_01}}\",\"fName_fuzzy\":[],\"lName_fuzzy\":[],\"notes\":[],\"createdAt\":\"\",\"updatedAt\":\"\",\"__v\":0}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Edit_03_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Edit contact with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid ID\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"6848\",\"fName\":\"{{contact_Efirst_Name_01}}\",\"lName\":\"{{contact_LElast_Name_01}}\",\"company\":null,\"email\":\"{{contact_Eemail_01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"New\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"type\":\"\",\"tags\":[\"tag\",\"hai\"],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"views\":0,\"clicks\":0,\"totalEmailSent\":0,\"isUnsubscribed\":false,\"AccountId\":\"{{account_Id_01}}\",\"fName_fuzzy\":[],\"lName_fuzzy\":[],\"notes\":[],\"createdAt\":\"\",\"updatedAt\":\"\",\"__v\":0}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Edit_04_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Edit contact for missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact not found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"_id\":\"{{contact_Id_01}}\",\"fName\":\"{{contact_Efirst_Name_01}}\",\"lName\":\"{{contact_LElast_Name_01}}\",\"company\":null,\"email\":\"{{contact_Eemail_01}}\",\"emailType\":\"\",\"title\":\"\",\"phone\":\"\",\"extn\":\"\",\"phoneType\":\"\",\"stage\":\"New\",\"street\":\"\",\"city\":\"\",\"state\":\"\",\"country\":\"\",\"code\":\"\",\"linkedin\":\"\",\"facebook\":\"\",\"type\":\"\",\"tags\":[\"tag\",\"hai\"],\"archive\":false,\"timezone\":\"Asia/Calcutta\",\"views\":0,\"clicks\":0,\"totalEmailSent\":0,\"isUnsubscribed\":false,\"AccountId\":\"{{account_Id_01}}\",\"fName_fuzzy\":[],\"lName_fuzzy\":[],\"notes\":[],\"createdAt\":\"\",\"updatedAt\":\"\",\"__v\":0}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete_Contact",
					"item": [
						{
							"name": "Con_Delete__01_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contact_Id_02}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_Mul_02_DeleteContact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Delete multiple contact successfully\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Contact(s) Deleted\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contact_Id_03}}\",\"{{contact_Id_04}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_03_Invalid_Access_Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Delete contact with invalid access token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Access Token is Expired / Invalid Token\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "35465465463543654",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contact_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_04_Invalid_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Delete contact with invalid id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid  Id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"655\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_05_Miss_Match_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Delete contact with missmatch id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"No Contacts to Delete\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_02}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"id\":[\"{{contact_Id_01}}\"]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v2/contact",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									]
								}
							},
							"response": []
						},
						{
							"name": "Con_Delete_06_Happy_Path",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"var conid = pm.globals.get(\"contact_Id_01\");\r",
											"pm.test(\"Get contact\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(\"conid\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{global_Token_01}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v2/contact?limit=1000",
									"host": [
										"{{url}}"
									],
									"path": [
										"v2",
										"contact"
									],
									"query": [
										{
											"key": "limit",
											"value": "1000"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}